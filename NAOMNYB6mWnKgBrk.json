{"createdAt":"2025-09-10T17:02:15.330Z","updatedAt":"2025-10-28T19:15:04.000Z","id":"NAOMNYB6mWnKgBrk","name":"BILL - Produ√ß√£o","active":true,"isArchived":false,"nodes":[{"parameters":{"mode":"runOnceForEachItem","jsCode":"// alguns parametros √© melhor montar com javascript,\n// facilita o entendimento e manuten√ß√£o\n\n// nao confundir montagem de objetos javascript com mensagens json\n// tem diferen√ßas, mas o n8n converte automaticamente para json\n\nitem.json.reply = $json.reply;\n\nitem.json.optionList = {\n  title: \"Servi√ßos dispon√≠veis !\",\n  buttonLabel: \"Abrir lista de op√ß√µes\",\n  options: [\n    {\n      id: \"1\",\n      description: \"\",\n      title: \"üìÑ Faturas em aberto\",\n    },\n    {\n      id: \"2\",\n      description: \"\",\n      title: \"‚úÖ Faturas pagas\",\n    },    \n    {\n      id: \"3\",\n      description: \"\",\n      title: \"üìä Hist√≥rico de consumo\",\n    },\n    {\n      id: \"4\",\n      description: \"\",\n      title: \"üìù Den√∫ncia\",\n    },\n    {\n      id: \"5\",\n      description: \"\",\n      title: \"üåç Localiza√ß√£o\",\n    },\n    {\n      id: \"6\",\n      description: \"\",\n      title: \"üîÑ Trocar liga√ß√£o\",\n    },\n    {\n      id: \"7\",\n      description: \"\",\n      title: \"üßëüèª‚Äçüíº Falar com Atendente\",\n    },\n    {\n      id: \"8\",\n      description: \"\",\n      title: \"üñêüèª Sair\",\n    },\n  ],\n};\n\nreturn item;\n"},"id":"50fc484d-d740-477f-ac02-e8c0de0713d9","name":"Monta lista recursos","type":"n8n-nodes-base.code","typeVersion":2,"position":[1872,544]},{"parameters":{"mode":"runOnceForEachItem","jsCode":"// alguns parametros √© melhor montar com javascript,\n// facilita o entendimento e manuten√ß√£o\n\n// nao confundir montagem de objetos javascript com mensagens json\n// tem diferen√ßas, mas o n8n converte automaticamente para json\n\nitem.json.reply = \"Que bom ter voc√™ por aqui üëãüèª\\n\\nEm que posso lhe ajudar ?\";\n\nitem.json.optionList = {\n  title: \"Servi√ßos dispon√≠veis !\",\n  buttonLabel: \"Abrir lista de op√ß√µes\",\n  options: [\n    {\n      id: \"1\",\n      description: \"\",\n      title: \"üìÑ Faturas em aberto\",\n    },\n    {\n      id: \"2\",\n      description: \"\",\n      title: \"‚úÖ Faturas pagas\",\n    },    \n    {\n      id: \"3\",\n      description: \"\",\n      title: \"üìä Hist√≥rico de consumo\",\n    },\n    {\n      id: \"4\",\n      description: \"\",\n      title: \"üìù Den√∫ncia\",\n    },\n    {\n      id: \"5\",\n      description: \"\",\n      title: \"üåç Localiza√ß√£o\",\n    },\n    {\n      id: \"6\",\n      description: \"\",\n      title: \"üîÑ Trocar liga√ß√£o\",\n    },\n    {\n      id: \"7\",\n      description: \"\",\n      title: \"üßëüèª‚Äçüíº Falar com Atendente\",\n    },\n    {\n      id: \"8\",\n      description: \"\",\n      title: \"üñêüèª Sair\",\n    },\n  ],\n};\n\nreturn item;\n"},"id":"a3098f39-46fc-443a-ad60-d9306ac01b7d","name":"Monta lista","type":"n8n-nodes-base.code","typeVersion":2,"position":[2912,1104]},{"parameters":{"mode":"runOnceForEachItem","jsCode":"// Node: Get Payload  (runOnceForEachItem)\nconst it = $input.item; const j = it.json || {};\nconst src = ($items(\"Receber mensagem\")[0]||{}).json || {};\nconst body = j.body || src.body || {};\n\nconst first = (...vals) => {\n  for (const v of vals) if (typeof v === 'string' && v.trim()) return v.trim();\n  return '';\n};\n\n// Normaliza tudo para $json.message.content.data\nconst data = {\n  phone: body.phone ?? j.phone ?? null,\n  text: first(\n    body?.text?.message,\n    j?.text?.message,\n    body?.message?.text,\n    body?.message?.conversation,\n    body?.buttonReply?.message,\n    body?.buttonsResponseMessage?.message\n  ),\n  list: {\n    title: first(\n      body?.listResponseMessage?.title,\n      body?.listResponse?.title\n    ) || null,\n    rowId: body?.listResponseMessage?.rowId ?? body?.listResponse?.rowId ?? null,\n  },\n  button: {\n    id: body?.buttonReply?.id ?? null,\n    label: body?.buttonReply?.message ?? null,\n  },\n  quotedMessageId: body?.quotedMsgId ?? body?.[\"quoted-message-id\"] ?? null,\n};\n\nit.json.message = { content: { data } };\nit.json.phone = data.phone ?? it.json.phone ?? null;\nreturn it;\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-768,128],"id":"398a6426-3448-4a0d-8b0f-41f5daad5e4e","name":"Get Payload"},{"parameters":{"requestMethod":"POST","url":"={{ $('Constantes').item.json.env.endpoints.sendButtonList}}","options":{"fullResponse":true,"splitIntoItems":false},"bodyParametersUi":{"parameter":[{"name":"phone","value":"={{ $json.phone }}"},{"name":"message","value":"={{ $json.message }}"},{"name":"buttonList","value":"={{ $json.buttonList }}"}]},"headerParametersUi":{"parameter":[{"name":"Client-Token","value":"={{ $('Constantes').item.json.env.clientTokenHeaderZapi }}"},{"name":"Content-Type","value":"application/json"}]}},"name":"Apresentar Faturas em Aberto","type":"n8n-nodes-base.httpRequest","typeVersion":2,"position":[4064,496],"id":"d326d98f-0f01-4c48-8557-65b6f62d58a9","alwaysOutputData":true},{"parameters":{"url":"={{$('Constantes').item.json.env.api.endpoints.retornarUsuario}}","sendQuery":true,"queryParameters":{"parameters":[{"name":"matricula","value":"={{ $('Precisa Validar Liga√ß√£o ?').item.json.session.data.codigoLigacao }}"}]},"options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[464,864],"id":"e8586509-89ae-4bf3-b3b5-7db4ce14c4a9","name":"Validar LIga√ß√£o","onError":"continueErrorOutput"},{"parameters":{"url":"={{$('Constantes').item.json.env.api.endpoints.historicoConsumo}}","sendQuery":true,"queryParameters":{"parameters":[{"name":"matricula","value":"={{ $('Resposta lista').item.json.session.data.codigoLigacao }}"}]},"options":{"response":{"response":{"responseFormat":"json"}}}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[3632,1008],"id":"933cb11a-559d-4913-b422-85e3d188f807","name":"Hist√≥rico de consumo","alwaysOutputData":true,"onError":"continueRegularOutput"},{"parameters":{"jsCode":"// === Formatar hist√≥rico de consumo ‚Äî Run once for all items ===\nconst items = $input.all();\n\n// 1) Pega as linhas do retorno da API (array no json / rows / result / data, ou v√°rios itens)\nfunction extractRows(arr) {\n  if (!arr.length) return [];\n  const j0 = arr[0].json;\n  if (Array.isArray(j0))        return j0;\n  if (Array.isArray(j0.rows))   return j0.rows;\n  if (Array.isArray(j0.result)) return j0.result;\n  if (Array.isArray(j0.data))   return j0.data;\n  if (arr.length > 1)           return arr.map(i => i.json); // fallback: 1 item por linha\n  return [];\n}\nconst rows = extractRows(items);\n\n// 2) Utilit√°rios\nconst pad  = (s, w) => String(s ?? '').padEnd(w, ' ');\nconst padR = (s, w) => String(s ?? '').padStart(w, ' ');\nconst numBR = (n) => Number(n ?? 0).toLocaleString('pt-BR');\nconst money = (n) => new Intl.NumberFormat('pt-BR', { style: 'currency', currency: 'BRL' })\n  .format(Number(n ?? 0));\n\n// 3) Phone / sess√£o / liga√ß√£o (se houver)\nlet phone = null, session = null;\nfor (const it of items) {\n  phone   = phone   ?? it.json.session?.phone ?? it.json.phone ?? it.json.body?.phone ?? null;\n  session = session ?? it.json.session ?? it.json._session ?? null;\n}\nconst ligacao = $('Router').first().json._session.data_json.codigoLigacao ?? '';\n\n// 4) Sem dados ‚Üí resposta amig√°vel\nif (!rows.length) {\n  return [{\n    json: {\n      phone,\n      session,\n      ligacao,\n      reply: 'N√£o encontrei hist√≥rico de consumo para a liga√ß√£o *' + ligacao + '*\\n'\n    },\n    pairedItem: [{ item: 0 }]\n  }];\n}\n\n// 5) Mapeia e formata (API: referencia, leitura, litrosConsumidos, valorFaturado, vencimento)\nconst mapped = rows.map(r => ({\n  referencia:   String(r.referencia ?? ''),\n  leitura:   String(r.leitura ?? ''),\n  consumo:String(r.litrosConsumidos ?? 0),\n}));\n\n// 6) Tabela monoespa√ßada\nconst W_MES=10, W_LEI=8, W_CONS=8;\nconst header = `${pad('M√™s/Ano', W_MES)} ${pad('Leitura', W_LEI)} ${pad('Consumo', W_CONS)}`;\nconst sep    = '-'.repeat(header.length);\n\nconst lines = mapped.map(r =>\n  `${pad(r.referencia, W_MES-2)} ${padR(numBR(r.leitura), W_LEI)} ${padR(numBR(r.consumo), W_CONS)}`\n);\n\nconst reply =\n  `üìä Hist√≥rico de consumo da liga√ß√£o *` + ligacao + `*\\n` +\n  '```' + '\\n' +\n  header + '\\n' + sep + '\\n' +\n  lines.join('\\n') + '\\n' + sep + '\\n' +\n  '```';\n\n// 7) Sa√≠da √∫nica para o HTTP /send-text\nreturn [{\n  json: { phone, session, reply },\n  // devolve pairedItem p/ evitar erros de \"Paired item data...\"\n  pairedItem: [{ item: 0 }]\n}];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[3856,1008],"id":"54b77ca8-ee6c-4147-b240-6229d982113a","name":"Formatar hist√≥rico de consumo"},{"parameters":{"operation":"deleteTable","table":{"__rl":true,"value":"sessions","mode":"list","cachedResultName":"sessions"},"deleteCommand":"delete","where":{"values":[{"column":"phone","value":"={{ $('Router').item.json.phone }}"},{"column":"phoneconectado","value":"={{ $('Router').item.json.phoneconectado }}"}]},"options":{}},"id":"f0b3ec70-54bc-4544-8fe6-d0ed38a233f5","name":"Deletar sess√£o","type":"n8n-nodes-base.mySql","typeVersion":2,"position":[80,288],"credentials":{"mySql":{"id":"DjogxsxdXYGa9DzE","name":"InovaBot"}}},{"parameters":{"requestMethod":"POST","url":"={{ $('Constantes').item.json.env.endpoints.sendText }}","options":{},"bodyParametersUi":{"parameter":[{"name":"phone","value":"={{$node[\"Receber mensagem\"].json[\"body\"][\"phone\"]}}"},{"name":"message","value":"={{ \n\"Den√∫ncia registrada ‚úÖ\\n\\nSegue n√∫mero do *requerimento* para acompanhamento: *\" + $json.numero + \"*\"\n}}"},{"name":"delayMessage","value":"2"}]},"headerParametersUi":{"parameter":[{"name":"Client-Token","value":"={{ $('Constantes').item.json.env.clientTokenHeaderZapi }}"},{"name":"Content-Type","value":"application/json"}]}},"name":"Enviar Confirma√ß√£o","type":"n8n-nodes-base.httpRequest","typeVersion":2,"position":[3552,1808],"id":"56c30ef4-8ed6-4a86-be52-46d19371250b"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":1},"conditions":[{"id":"574393e4-f6c2-4883-9c8d-2329d3029112","leftValue":"={{ $json.session.flow }}","rightValue":"ouvidoria","operator":{"type":"string","operation":"equals"}}],"combinator":"and"},"options":{}},"id":"5e5b20ca-ccd1-41e2-9b87-1944894f4d7e","name":"Processa Ouvidoria ?","type":"n8n-nodes-base.if","typeVersion":2,"position":[1760,1632]},{"parameters":{"jsCode":"const it = $input.item;\nconst j  = it.json;\n\n// phone\nconst phone =\n  j.session?.phone ??\n  j._session?.phone ??\n  j.body?.phone ??\n  j.phone ??\n  $items(\"Receber mensagem\")[0]?.json?.body?.phone ??\n  null;\n\n// phone\nconst phoneconectado =\n  j.session?.phoneconectado ??\n  j._session?.phoneconectado ??\n  j.body?.phoneconectado ??\n  j.phoneconectado ??\n  $items(\"Receber mensagem\")[0]?.json?.body?.phoneconectado ??\n  null;\n\n// data_json pode ser string\nlet dj = $(\"Autenticado ?\").first().json.data_json;\nif (typeof dj === 'string') { try { dj = JSON.parse(dj); } catch { dj = {}; } }\ndj = dj || {};\n\nj.session = {\n  phone,\n  flow: \"confirm\",\n  step: 1,\n  expectedRef: j.session?.expectedRef ?? null,\n  data: {\n    // mant√©m plano\n    authOk: true,\n    nome: dj.nome ?? j.session?.data?.nome ?? '',\n    codigoLigacao: dj.codigoLigacao ?? j.session?.data?.codigoLigacao ?? null,\n  },\n  // expiresAt √© da sess√£o, n√£o de data\n  expiresAt: new Date(Date.now() + 15 * 60000).toISOString(),\n  phoneconectado,\n};\n\nreturn it; // (antes retornava j; mantenha o item inteiro)\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[6608,144],"id":"827652f6-a029-40ea-83d5-cf384b1c0593","name":"Recriar session"},{"parameters":{"mode":"combine","combineBy":"combineAll","options":{}},"type":"n8n-nodes-base.merge","typeVersion":3.2,"position":[6352,144],"id":"68b9f49a-f415-470c-bf21-9554ec1c8b42","name":"Merge"},{"parameters":{"jsCode":"const item = $input.item;\nconst j = item.json;\n\nconst phone =\n  j.session?.phone ??\n  j.phone ??\n  $items(\"Receber mensagem\")[0]?.json?.body?.phone ?? null;\n\n// guarda a sess√£o COMPLETA; n√£o altere o item\nj._snapList = {\n  phone,\n  session: JSON.parse(JSON.stringify(j.session || {})),\n};\n\nreturn item;\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[6096,-80],"id":"369ccbe3-31f5-4348-800b-8d874ce1f0d4","name":"Snapshot Sess√£o (Confirm)"},{"parameters":{"requestMethod":"POST","url":"={{ $('Constantes').item.json.env.endpoints.sendText }}","options":{},"bodyParametersUi":{"parameter":[{"name":"phone","value":"={{$node[\"Receber mensagem\"].json[\"body\"][\"phone\"]}}"},{"name":"message","value":"={{ $('Router').item.json.reply }}"},{"name":"delayMessage","value":"2"}]},"headerParametersUi":{"parameter":[{"name":"Client-Token","value":"={{ $('Constantes').item.json.env.clientTokenHeaderZapi }}"},{"name":"Content-Type","value":"application/json"}]}},"name":"Mensagem Encerramento","type":"n8n-nodes-base.httpRequest","typeVersion":2,"position":[-432,416],"id":"175fbf2b-b071-4f62-89cc-b34f68dc47e0"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"7f66ad89-eeb4-4dac-be36-0a7f140a037d","leftValue":"={{ $json.showEnd}}","rightValue":"","operator":{"type":"boolean","operation":"true","singleValue":true}}],"combinator":"or"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[-752,592],"id":"3e1c0ad0-af41-4de2-9655-5ed7db67ebdb","name":"Encerrar Atendimento ?"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"7f66ad89-eeb4-4dac-be36-0a7f140a037d","leftValue":"={{ $json.showMenu}}","rightValue":"","operator":{"type":"boolean","operation":"true","singleValue":true}}],"combinator":"or"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[1600,592],"id":"c4c339fa-0580-4e5e-99fe-a85af4f6f0ab","name":"Abrir Menu ?"},{"parameters":{"mode":"runOnceForEachItem","jsCode":"const item = $input.item;\nconst j = item.json;\n\n// resolve phone de forma robusta\nconst rxPhone =\n  j.phone ??\n  j.session?.phone ??\n  $items(\"Receber mensagem\")[0]?.json?.body?.phone ??\n  null;\n\nconst rxPhoneconectado =\n  j.phoneconectado ??\n  j.session?.phoneconectado ??\n  $items(\"Receber mensagem\")[0]?.json?.body?.connectedPhone ??\n  null;\n\nj.phone = rxPhone;\nj.phoneconectado = rxPhoneconectado;\n\n// preserva sess√£o existente e NUNCA zera data\nj.session = j.session || {};\nj.session.phone = j.session.phone ?? rxPhone;\nj.session.flow = \"confirm\";\nj.session.step = 1;\nj.session.data = j.session.data || {}; // <- n√£o sobrescreve\nj.session.expiresAt = new Date(Date.now() + 15 * 60000).toISOString();\nj.session.phoneconectado = j.session.phoneconectado ?? rxPhoneconectado;\n\nj.reply = \"Posso lhe ajudar em algo mais ?\";\nj.buttonList = {\n    buttons: [\n      { id: \"Sim\", label: \"Sim\", type: \"REPLY\" },\n      { id: \"N√£o\", label: \"N√£o\", type: \"REPLY\" },\n    ],\n  }\n\nreturn item;\n"},"id":"daa5f45e-b8ea-45d9-9a3c-be208692f1d0","name":"Encerramento/Voltar","type":"n8n-nodes-base.code","typeVersion":2,"position":[5840,128]},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"7f66ad89-eeb4-4dac-be36-0a7f140a037d","leftValue":"={{ $json.isList }}","rightValue":"","operator":{"type":"boolean","operation":"true","singleValue":true}}],"combinator":"or"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[2720,1008],"id":"1fb5175f-e63c-4494-8b91-435658132a2b","name":"Resposta vem de Lista"},{"parameters":{"requestMethod":"POST","url":"={{ $('Constantes').item.json.env.endpoints.sendOptionList }}","options":{},"bodyParametersUi":{"parameter":[{"name":"phone","value":"={{$node[\"Receber mensagem\"].json[\"body\"][\"phone\"]}}"},{"name":"message","value":"={{ String($json.reply ?? '') }}"},{"name":"optionList","value":"={{ $json.optionList }}"}]},"headerParametersUi":{"parameter":[{"name":"Client-Token","value":"={{ $('Constantes').item.json.env.clientTokenHeaderZapi }}"}]}},"name":"Imprimir Lista","type":"n8n-nodes-base.httpRequest","typeVersion":2,"position":[2112,384],"id":"c7967a41-172b-4a0b-a2a6-dbda9b9a09fb"},{"parameters":{"jsCode":"// n√£o destr√≥i o payload; s√≥ guarda uma c√≥pia da sess√£o para o Merge p√≥s-HTTP\nconst item = $input.item;\nconst j = item.json;\n\nj._snap = { phone: j.phone, session: j.session }; // stash para uso no Set expectedRef / Merge\nreturn item; // mant√©m reply, showMenu, etc.\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1376,384],"id":"76bb631e-b938-495e-95fe-3ef4ec2be328","name":"Snapshot Sess√£o Lista"},{"parameters":{"jsCode":"return [\n  {\n    json: {\n      phone: $json.phone,\n      session: $json.session,\n    },\n  },\n];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-304,1344],"id":"0c707bfc-d7b6-496e-a24d-ce208a886a46","name":"Snapshot Sess√£o Texto"},{"parameters":{"mode":"combine","combineBy":"combineAll","options":{}},"type":"n8n-nodes-base.merge","typeVersion":3.2,"position":[2160,1088],"id":"7f2f5b2f-acf7-4a84-852f-6b2ea2a45c41","name":"Merge Texto + Sess√£o"},{"parameters":{"mode":"combine","combineBy":"combineAll","options":{}},"type":"n8n-nodes-base.merge","typeVersion":3.2,"position":[2400,64],"id":"ab3da3f1-b9e5-41a6-83ca-38476b4282e6","name":"Merge Lista + Sess√£o","onError":"continueRegularOutput"},{"parameters":{"requestMethod":"POST","url":"={{ $('Constantes').item.json.env.endpoints.sendText }}","options":{},"bodyParametersUi":{"parameter":[{"name":"phone","value":"={{$node[\"Receber mensagem\"].json[\"body\"][\"phone\"]}}"},{"name":"message","value":"={{ $json.reply }}"},{"name":"delayMessage","value":"2"}]},"headerParametersUi":{"parameter":[{"name":"Client-Token","value":"={{ $('Constantes').item.json.env.clientTokenHeaderZapi }}"}]}},"name":"Apresentar historico","type":"n8n-nodes-base.httpRequest","typeVersion":2,"position":[4080,1008],"id":"7b0e5ad3-0be6-43e8-aa0a-640f9fb8d8e0"},{"parameters":{"mode":"combine","combineBy":"combineAll","options":{}},"type":"n8n-nodes-base.merge","typeVersion":3.2,"position":[736,368],"id":"975dcec4-c405-41ac-8cef-b915f444f4a9","name":"Passar Session"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":1},"conditions":[{"id":"552c6e23-e71b-4b3e-ba9d-747a56d5978e","leftValue":"={{ $json.session.data.authOk }}","rightValue":"","operator":{"type":"boolean","operation":"true","singleValue":true}}],"combinator":"or"},"options":{}},"id":"e685dde0-1f2e-4778-8541-c579ad1d1410","name":"Autenticado ?","type":"n8n-nodes-base.if","typeVersion":2,"position":[192,1776]},{"parameters":{},"id":"82c194ba-2c47-449c-8f51-af5d6f9938d0","name":"No Operation, do nothing3","type":"n8n-nodes-base.noOp","position":[384,2368],"typeVersion":1,"alwaysOutputData":false},{"parameters":{"mode":"runOnceForEachItem","jsCode":"/**\n * ROUTER ‚Äî Ident (Nome -> C√≥digo), Menu e Confirma√ß√£o SIM/N√ÉO\n * Entradas principais: j.message.content.data (Get Payload), j._session (Select/Inject Sess√£o)\n * Sa√≠das: j.session, j.reply, j.showMenu (bool), j.showEnd (bool), j.finalize (bool)\n */\n\n// --- Header\nconst item = $input.item || { json: {} };\nconst j = item.json || {};\n\n// util: primeiro texto n√£o vazio\nconst first = (...vals) => {\n  for (const v of vals)\n    if (typeof v === \"string\" && v.trim() !== \"\") return v.trim();\n  return \"\";\n};\nconst lower = (s) => (s || \"\").toLowerCase();\n\n// -------- Entrada normalizada (Get Payload) --------\nconst data = j?.message?.content?.data || {};\nconst textIn = first(data.text);\nconst listT = data?.list?.title || null;\nconst listId = data?.list?.rowId || null;\nconst btnLabel = data?.button?.label || null;\n\nj.isList = !!(listT || listId);\nj.choiceTitle = listT;\nj.choiceId = listId;\n\n// mensagem efetiva\nlet msg = j.isList ? j.choiceTitle || \"\" : textIn;\n\nconst normalized = String(msg).trim().toLowerCase();\n\n// comandos globais\nif (normalized.includes(\"sair\")) {\n  j.showEnd = true;\n  // Obt√©m a hora atual de Bras√≠lia\n  const agora = new Date();\n  const horaBR = new Date(agora.toLocaleString('en-US', { timeZone: 'America/Sao_Paulo' }));\n  const hora = horaBR.getHours();\n  let mensagem;\n  if (hora <= 12) {\n    mensagem = \"*Agradecemos pelo contato*, tenha um √≥timo dia ‚òÄÔ∏è\";\n  } else if (hora >= 18) {\n    mensagem = \"*Agradecemos pelo contato*, tenha uma √≥tima noite üåÉ\";\n  } else {\n    mensagem = \"*Agradecemos pelo contato*, tenha uma √≥tima tarde üåá\";\n  }\n  j.reply = mensagem;\n  return item;\n}\n\n// phone robusto\nconst src = ($items(\"Receber mensagem\")[0] || {}).json || {};\nj.phone = j.phone ?? j?.body?.phone ?? data?.phone ?? src?.body?.phone ?? null;\n\n\n// -------- Reconstroi sess√£o a partir do Select/Inject Sess√£o --------\nconst row = j._session || {};\nlet session = null;\nif (row && (row.flow || row.data_json || row.expires_at)) {\n  session = {\n    phone: row.phone || j.phone,\n    phoneconectado: row.phoneconectado || j.phoneconectado,\n    flow: row.flow || \"ident\",\n    step: Number(row.step ?? 1),\n    expectedRef: row.expected_ref ?? row.expectedRef ?? null,\n    data: row.data_json\n      ? typeof row.data_json === \"string\"\n        ? JSON.parse(row.data_json || \"{}\") || {}\n        : row.data_json\n      : {},\n    expiresAt: row.expires_at\n      ? new Date(row.expires_at).toISOString()\n      : null,\n  };\n}\n\n// expira√ß√£o & resets\nif (session?.expiresAt && new Date(session.expiresAt) < new Date())\n  session = null;\nconst low = lower(msg);\nif (low === \"menu\" || low === \"cancelar\") session = null;\n\n// ===================== N√ÉO AUTENTICADO (ident) =====================\nconst authed = session?.data?.authOk === true;\n\nif (!authed) {\n  if (!session || session.flow !== \"ident\") {\n    // inicia identifica√ß√£o\n    session = {\n      phone: j.phone,\n      phoneconectado: j.phoneconectado,\n      flow: \"ident\",\n      step: 1,\n      data: {},\n      expectedRef: null,\n      expiresAt: new Date(Date.now() + 15 * 60000).toISOString(),\n    };\n    j.reply = \"üëãüèª Ol√°! Eu sou o *BILL*, seu assistente virtual.\\nEstou aqui para te atender de forma r√°pida e humanizada.\\n\\nPara come√ßarmos, qual √© o seu *nome*?\";\n    j.finalize = false;\n  } else if (session.step === 1 && !j.reply) {\n    // PASSO 1 ‚Äî nome\n    if (msg === \"\") {\n      j.reply = \"Desculpe, n√£o consegui entender.\\nPode me informar seu *nome*, por favor? üôåüèª\";\n    } else {\n      session.data.nome = msg;\n      session.step = 2;\n      session.needValidateLigacao = false; // s√≥ arma quando vier o c√≥digo\n        j.reply = `Prazer em falar com voc√™, *${session.data.nome} !* üëãüèª\\nPor favor, me informe o *c√≥digo da liga√ß√£o* (apenas os n√∫meros, sem o d√≠gito).\\n\\nSe quiser encerrar o atendimento, basta digitar *Sair* a qualquer momento.`;\n    }\n    j.finalize = false;\n  } \n  \n  else if (session.step === 2 && !j.reply) {\n  const codigodaLigacao = String(msg ?? \"\").trim();\n\n  if (codigodaLigacao === \"\") {\n    j.reply = `Informe o *c√≥digo da liga√ß√£o*.`;\n    j.finalize = false;\n  } else if (!/^[0-9]+$/.test(codigodaLigacao)) {        // <-- s√≥ passa se for S√ì n√∫meros\n    j.reply = \"O c√≥digo informado n√£o √© v√°lido.\\n\\nPor favor, digite apenas os *n√∫meros* ‚Äî sem letras, espa√ßos ou s√≠mbolos. üî¢\";\n    j.finalize = false;\n  } else {\n      session.data.codigoLigacao = codigodaLigacao;        // mant√©m exatamente o que foi digitado (s√≥ d√≠gitos)\n      session.step = 3;\n      session.needValidateLigacao = false; \n      j.reply =`*${session.data.nome}*, me informe por favor a *chave digital*.`;\n    j.finalize = false;\n  }\n}   \n\n  else if (session.step === 3 && !j.reply) {\n  const chavedigital = String(msg ?? \"\").trim();\n  if (chavedigital === \"\") {\n    j.reply = \"Informe a *chave digital*.\";\n    j.finalize = false;\n  } else {\n      session.data.chavedigital = chavedigital;        // mant√©m exatamente o que foi digitado (s√≥ d√≠gitos)\n      session.step = 3;\n      session.needValidateLigacao = true; \n      j.reply = null;\n    j.finalize = false;\n  }\n}\n\n  // sa√≠da parcial\n  session.expiresAt = new Date(Date.now() + 15 * 60000).toISOString();\n  j.session = {\n    phone: session.phone,\n    phoneconectado: session.phoneconectado,\n    flow: session.flow,\n    step: session.step,\n    expectedRef: session.expectedRef,\n    data: session.data,\n    expiresAt: session.expiresAt,\n    needValidateLigacao: !!session.needValidateLigacao,\n  };\n  return item;\n}\n\n// ===================== AUTENTICADO =====================\n\n// SIM/N√ÉO (quando estiver em confirma√ß√£o)\nconst ans = lower(btnLabel || j.choiceTitle || msg || \"\");\nconst isYesNo = ans === \"sim\" || ans === \"n√£o\";\n\n\nif (session?.flow === \"humano\")\n{\n      session.flow = \"ident\",\n      session.step = 3;\n      session.needValidateLigacao = true; \n      j.reply = null;\n}\n\nif (session?.flow === \"confirm\" && session?.step === 1 && isYesNo) {\n  if (ans === \"sim\") {\n    session.step = 0;\n    j.showMenu = true; // lista ser√° enviada fora do Router\n    j.reply = \"\";\n  } else {\n  // Obt√©m a hora atual de Bras√≠lia\n  const agora = new Date();\n  const horaBR = new Date(agora.toLocaleString('en-US', { timeZone: 'America/Sao_Paulo' }));\n  const hora = horaBR.getHours();\n\n  // Define a mensagem conforme o hor√°rio\n  let mensagem;\n  if (hora <= 12) {\n    mensagem = \"*Agradecemos pelo contato*, tenha um √≥timo dia ‚òÄÔ∏è\";\n  } else if (hora >= 18) {\n    mensagem = \"*Agradecemos pelo contato*, tenha uma √≥tima noite üåÉ\";\n  } else {\n    mensagem = \"*Agradecemos pelo contato*, tenha uma √≥tima tarde üåá\";\n  }\n  // Retorna valores no padr√£o da tua sess√£o\n  session.step = 0;\n  j.showEnd = true;\n  j.reply = mensagem;\n}\n  session.expiresAt = new Date(Date.now() + 15 * 60000).toISOString();\n  j.session = session;\n  return item;\n}\n\n// Escolha de servi√ßo (autenticado)\nconst chosen = lower(j.isList ? j.choiceTitle : msg || \"\");\n\nif (chosen === \"localiza√ß√£o\") {\n  j.reply = null; // fluxo de Localiza√ß√£o assume\n} else if (chosen.includes(\"den√∫ncia\") || chosen.includes(\"denuncia\")) {\n  j.reply = \"Tudo certo! üí¨\\n\\nMe conte com o m√°ximo de detalhes o que aconteceu, assim conseguimos te ajudar mais r√°pido.\";\n  session.flow = \"ouvidoria\";\n} else if (\n  chosen === \"hist√≥rico de consumo\" ||\n  chosen === \"historico de consumo\"\n) {\n  j.reply = null; // fluxo hist√≥rico assume\n} else if (\n  chosen === \"2¬™ via de fatura\" ||\n  chosen === \"2¬™ via\" ||\n  chosen === \"faturas em aberto\"\n) {\n  // mant√©m seu comportamento atual; se quiser PIX, trate aqui (flow='pix')\n  j.reply = null;\n}\n\n// Atualiza sess√£o e sai\nsession.expiresAt = new Date(Date.now() + 15 * 60000).toISOString();\nj.session = {\n  phone: session.phone,\n  phoneconectado: session.phoneconectado,\n  flow: session.flow,\n  step: session.step,\n  expectedRef: session.expectedRef,\n  data: session.data,\n  expiresAt: session.expiresAt,\n  needValidateLigacao: !!session.needValidateLigacao,\n};\n\nreturn item;\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-400,128],"id":"d87c613d-dbfe-4731-bd54-41ed10ed9d50","name":"Router"},{"parameters":{"jsCode":"const j = $input.item.json;\nconst sess = j.session || {};\nsess.data = sess.data || {};\n\nlet codigo = String(sess.data.codigoLigacao ?? j.codigo ?? '').trim();\ncodigo = (codigo.match(/\\d+/g)?.join('')) || '';\nif (codigo) sess.data.codigoLigacao = codigo;\nelse delete sess.data.codigoLigacao;\n\nreturn [{ json: { phone: j.phone, session: sess } }];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[224,512],"id":"ee219bec-e1c8-42dd-9e6d-7b59a2ebfc74","name":"Setar Codigo"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":1},"conditions":[{"id":"b2007816-7ce0-42dd-add7-645f7950de92","leftValue":"={{ $json.session.flow }}","rightValue":"ident","operator":{"type":"string","operation":"equals"}},{"id":"1c337c9f-1e98-43d9-b0fe-8e845f1d8db9","leftValue":"={{ $json.session.needValidateLigacao }}","rightValue":"","operator":{"type":"boolean","operation":"true","singleValue":true}},{"id":"e1ebe7b6-99c8-47d5-adb0-866dc3d015f5","leftValue":"={{ $json.session.data.codigoLigacao }}","rightValue":"","operator":{"type":"string","operation":"notEmpty","singleValue":true}}],"combinator":"and"},"options":{}},"id":"39538949-dd20-4a34-b3ef-8176b1c00c2b","name":"Precisa Validar Liga√ß√£o ?","type":"n8n-nodes-base.if","typeVersion":2,"position":[-384,640]},{"parameters":{"jsCode":"// -------- Processa Valida√ß√£o (ap√≥s MERGE) --------\nconst j = $input.item.json || {};\nconst sess = j.session || {};\nconst phone = j.phone || sess.phone || null;\n\nconst found = Number(j.found ?? j.matricula != null) === 1;\nconst nome = sess?.data?.nome || \"cliente\";\nconst codigo = sess?.data?.codigoLigacao || j.codigo || \"\";\n\nif (found) {\n  sess.data = sess.data || {};\n  sess.data.authOk = true;\n  sess.flow = \"menu\";\n  sess.step = 0;\n  sess.needValidateLigacao = false;\n  sess.expiresAt = new Date(Date.now() + 15 * 60000).toISOString();\n  sess.data.codigoLigacao = codigo;\n  sess.data.nome = nome;\n\nconst cab = `Tudo certo, *` + nome + `*!‚úÖ\\n\\nValidei a liga√ß√£o *` + codigo + `*.\\n\\nEsta liga√ß√£o est√° vinculada ao endere√ßo : *` + $input.first().json.rua + `*, n√∫mero *XXX*, *` + $input.first().json.bairro + `*.\\n\\nQue bom ter voc√™ por aqui !\\nEm que posso lhe ajudar ?`;\n  return [{ json: { phone, session: sess, showMenu: true, reply: cab } }];\n}\n\n// N√ÉO ENCONTROU ‚Üí sempre devolve texto\nsess.step = 2;\nsess.needValidateLigacao = true;\nsess.expiresAt = new Date(Date.now() + 15 * 60000).toISOString();\n\nconst msg =\n  \"N√£o consegui validar os dados informados.\\n\\nPor favor, digite novamente o *c√≥digo da liga√ß√£o* (apenas os n√∫meros, sem o d√≠gito). üîÅ\";\nreturn [{ json: { phone, session: sess, showMenu: false, reply: msg } }];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1024,368],"id":"27155925-7a21-4547-82ec-9e964b4d2a40","name":"Processa Valida√ß√£o"},{"parameters":{"requestMethod":"POST","url":"={{ $('Constantes').item.json.env.endpoints.sendText }}","options":{},"bodyParametersUi":{"parameter":[{"name":"phone","value":"={{$node[\"Receber mensagem\"].json[\"body\"][\"phone\"]}}"},{"name":"=message","value":"={{ String($json.reply ?? '') }}"},{"name":"delayTyping","value":"2"}]},"headerParametersUi":{"parameter":[{"name":"Client-Token","value":"={{ $('Constantes').item.json.env.clientTokenHeaderZapi }}"}]}},"name":"Enviar Pergunta","type":"n8n-nodes-base.httpRequest","typeVersion":2,"position":[1872,848],"id":"604eadee-99dc-4a57-9a7d-877feb780e41","alwaysOutputData":false},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":1},"conditions":[{"id":"8f7c49d6-e100-469d-b178-c99701215cdd","leftValue":"={{ $json.reply }}","rightValue":"=","operator":{"type":"string","operation":"notEmpty","singleValue":true}}],"combinator":"and"},"options":{}},"id":"68543265-d33e-4b02-9869-0263fdb7f98a","name":"Tem reply?","type":"n8n-nodes-base.if","typeVersion":2,"position":[-96,1088]},{"parameters":{"operation":"executeQuery","query":"SELECT phone, flow, step, expected_ref, data_json, expires_at,phoneconectado\nFROM sessions\nWHERE phone = {{ $json.Phone }} and phoneconectado = {{ $json.PhoneConnected }}\n\nUNION ALL\n\nSELECT {{ $json.Phone }} AS phone, NULL AS flow, NULL AS step, NULL AS expected_ref, NULL AS data_json, NULL AS expires_at, {{ $json.PhoneConnected }} AS phoneconectado\nWHERE NOT EXISTS (SELECT 1 FROM sessions WHERE phone = {{ $json.Phone }} and phoneconectado = {{ $json.PhoneConnected }} )\nLIMIT 1;","options":{}},"id":"0c93ff2e-09a7-49f0-940c-2cb577765f57","name":"Select Sess√£o","type":"n8n-nodes-base.mySql","typeVersion":2,"position":[160,-208],"credentials":{"mySql":{"id":"DjogxsxdXYGa9DzE","name":"InovaBot"}}},{"parameters":{"requestMethod":"POST","url":"={{ $('Constantes').item.json.env.endpoints.sendButtonList}}","options":{},"bodyParametersUi":{"parameter":[{"name":"phone","value":"={{$node[\"Receber mensagem\"].json[\"body\"][\"phone\"]}}"},{"name":"message","value":"={{$json.reply}} "},{"name":"buttonList","value":"={{ $json.buttonList }}"}]},"headerParametersUi":{"parameter":[{"name":"Client-Token","value":"={{ $('Constantes').item.json.env.clientTokenHeaderZapi }}"},{"name":"Content-Type","value":"application/json"}]}},"name":"Mensagem final","type":"n8n-nodes-base.httpRequest","typeVersion":2,"position":[6112,368],"id":"3d5311f8-6f9d-4465-baa2-05944fedbda5"},{"parameters":{"mode":"runOnceForEachItem","jsCode":"const item = $input.item;\nconst j = item.json;\n\n// ==== ENTRADA / CAMPOS √öTEIS (mantidos) ====\nconst b = j.body ?? {};\nj.phone = j.phone ?? b.phone ?? null;\n\n// veio resposta de lista/bot√£o?\nj.listResponse = !!(b.listResponseMessage || b.listResponse || b.buttonReply);\n\n// flag ‚Äúencerrar atendimento‚Äù quando clicado em ‚ÄúN√£o‚Äù\nconst btnMsg = (b?.buttonReply?.message ?? \"\").trim().toLowerCase();\nj.encerraratendimento = btnMsg === \"n√£o\";\n\n// ==== CONFIGURA√á√ÉO POR N√öMERO (adicione seus n√∫meros aqui) ====\n// Use apenas d√≠gitos no √≠ndice, exatamente como chega em j.PhoneConnected\nconst phonesConfig = {\n  553798334700: {\n    idInstanceZapi: \"3E8B21D06B8671239C1E06149D1AE66A\",\n    tokenInstanceZapi: \"042DC76C6232C5C34B17A23E\",\n    clientTokenHeaderZapi: \"Fdc4b6b51b6d942db941b9e00a4991740S\",\n    rotaPrincipalDados:\n      \"https://tdev3-ag.icommercial002.inovamobil.com.br/api/chatbot\",\n    title: \"Inova√ß√£o Computa√ß√£o M√≥vel\",\n    address: \"Avenida Paran√°, 1348, Sidil, Divinopolis, MG, 35501-660\",\n    lat: \"-20.135580\",\n    long: \"-44.896239\",\n    tipoRequerimento: 54,\n  },\n  553798603941: {\n    idInstanceZapi: \"3E8020BFCB6F329C7878B2948C7C07B3\",\n    tokenInstanceZapi: \"7FAEC497FAA217714D1F22C7\",\n    clientTokenHeaderZapi: \"Fdc4b6b51b6d942db941b9e00a4991740S\",\n    rotaPrincipalDados:\n      \"https://tdev-ag.icommercial002.inovamobil.com.br/api/chatbot\",\n    title: \"Resid√™ncia\",\n    address: \"Rua Itapecerica, 1060, Sidil, Divinopolis, MG, 35500-018\",\n    lat: \"-20.13889\",\n    long: \"-44.88389\",\n    tipoRequerimento: 22,\n  },\n};\n\n// ==== OBRIGAT√ìRIO TER PhoneConnected ====\nconst phoneConnected = (j.PhoneConnected ?? \"\").replace(/\\D+/g, \"\");\nconst selected = phonesConfig[phoneConnected];\nif (!selected) {\n  throw new Error(\n    `PhoneConnected (${phoneConnected || \"vazio\"}) n√£o mapeado em phonesConfig`,\n  );\n}\n\n// ==== PARAMS (nomes mantidos, sem impacto) ====\nconst idInstanceZapi = selected.idInstanceZapi;\nconst tokenInstanceZapi = selected.tokenInstanceZapi;\nconst clientTokenHeaderZapi = selected.clientTokenHeaderZapi;\nconst rotaPrincipalDados = selected.rotaPrincipalDados;\n\nconst baseUrl = \"https://api.z-api.io\";\nconst extensionDocument = \"pdf\";\n\n// ==== ENV / ENDPOINTS ====\nconst endpointZapi = `${baseUrl}/instances/${idInstanceZapi}/token/${tokenInstanceZapi}`;\nj.env = {\n  baseUrl,\n  idInstanceZapi,\n  tokenInstanceZapi,\n  clientTokenHeaderZapi,\n  endpoints: {\n    sendOptionList: `${endpointZapi}/send-option-list`,\n    sendButtonList: `${endpointZapi}/send-button-list`,\n    sendCarousel: `${endpointZapi}/send-carousel`,\n    sendText: `${endpointZapi}/send-text`,\n    sendLink: `${endpointZapi}/send-link`,\n    sendAudio: `${endpointZapi}/send-audio`,\n    sendVideo: `${endpointZapi}/send-video`,\n    sendImage: `${endpointZapi}/send-image`,\n    sendDocument: `${endpointZapi}/send-document/${extensionDocument}`,\n    sendLocation: `${endpointZapi}/send-location`,\n  },\n  phoneConnected,\n};\n\nj.env.api = {\n  rotaPrincipalDados,\n  endpoints: {\n    historicoConsumo: `${rotaPrincipalDados}/historico-consumo`,\n    ultimasFaturas: `${rotaPrincipalDados}/faturas-abertas`,\n    faturasPagas: `${rotaPrincipalDados}/faturas-concluidas`,\n    retornarUsuario: `${rotaPrincipalDados}/retornar-usuario`,\n    gerarFatura: `${rotaPrincipalDados}/fatura-pdf`,\n    ouvidoria: `${rotaPrincipalDados}/denuncia`,\n    auditoria: `${rotaPrincipalDados}/auditoria`,\n  },\n  location: {\n    title: selected.title,\n    address: selected.address,\n    lat: selected.lat,\n    long: selected.long,\n  },\n  configuracao: {\n    tipoRequerimento: selected.tipoRequerimento,\n    HorarioAtendimentoHumanoInicio : \"08:00\",\n    HorarioAtendimentoHumanoFim : \"17:00\"\n  },\n};\n\nreturn item;\n"},"id":"157a89a3-49bd-4be7-a3b1-31c4579cb4e8","name":"Constantes","type":"n8n-nodes-base.code","typeVersion":2,"position":[-96,-208]},{"parameters":{"requestMethod":"POST","url":"={{ $('Constantes').item.json.env.endpoints.sendLocation }}","options":{},"bodyParametersUi":{"parameter":[{"name":"phone","value":"={{$node[\"Receber mensagem\"].json[\"body\"][\"phone\"]}}"},{"name":"title","value":"={{$('Constantes').item.json.env.api.location.title}}"},{"name":"address","value":"={{$('Constantes').item.json.env.api.location.address}}"},{"name":"latitude","value":"={{$('Constantes').item.json.env.api.location.lat}}"},{"name":"longitude","value":"={{$('Constantes').item.json.env.api.location.long}}"}]},"headerParametersUi":{"parameter":[{"name":"Client-Token","value":"={{ $('Constantes').item.json.env.clientTokenHeaderZapi }}"}]}},"name":"Envia Localiza√ß√£o","type":"n8n-nodes-base.httpRequest","typeVersion":2,"position":[3664,144],"id":"4c243997-a438-414d-9e42-8ba7083b218f","onError":"continueRegularOutput"},{"parameters":{},"id":"b04b1644-93e3-4ee4-9262-ee2306278408","name":"No Operation, do nothing1","type":"n8n-nodes-base.noOp","position":[2816,1376],"typeVersion":1,"alwaysOutputData":false},{"parameters":{},"id":"9864bf18-5b11-4ee7-8929-b153611c3e30","name":"No Operation, do nothing","type":"n8n-nodes-base.noOp","position":[2528,1568],"typeVersion":1,"alwaysOutputData":false},{"parameters":{"httpMethod":"POST","path":"BILL","options":{}},"name":"Receber mensagem","type":"n8n-nodes-base.webhook","typeVersion":1,"position":[-768,-208],"webhookId":"c3d709c3-6fc7-4d09-bd0b-6791ddbf81f5","id":"af385548-7c7f-4dee-8995-c20389f13d2d"},{"parameters":{"assignments":{"assignments":[{"id":"159af285-4def-4cef-b786-f3006096cb4d","name":"instanceid","value":"={{ $json.body.instanceId }}","type":"string"},{"id":"4e670196-33f5-4e71-8dc0-c45f2a3b4221","name":"messageid","value":"={{ $json.body.messageId }}","type":"string"},{"id":"18fe345b-9e00-4b92-bb04-1fd9e310f5ee","name":"messageText","value":"={{ $json.body?.listResponseMessage?.title \n   || $json.body?.listResponse?.title \n   || $json.body?.buttonReply?.message \n   || $json.body?.text?.message \n   || $json.body?.buttonsResponseMessage?.message \n   || '' }}","type":"string"},{"id":"dbe6291f-4458-46bc-bcbe-655dac0ef2d9","name":"fromMe","value":"={{ $json.body.fromMe }}","type":"boolean"},{"id":"3e1861eb-3498-475b-90b2-6714f68b30ec","name":"mensagemgrupo","value":"={{ $json.body.isGroup }}","type":"boolean"},{"id":"157104a3-1d94-4363-a746-37dc5e1b0669","name":"status","value":"={{ $json.body.status }}","type":"string"},{"id":"270c247a-464f-4a70-b840-81aedc560abb","name":"Phone","value":"={{ $json.body.phone }}","type":"string"},{"id":"97a5c888-007d-479e-9db2-b7fc5ecaa805","name":"chatname","value":"={{ $json.body.chatName }}","type":"string"},{"id":"097e7186-8b9b-4a3d-81b9-d5cfc8524153","name":"messageaudio","value":"={{ $json.body.audio.audioUrl }}","type":"string"},{"id":"99266c55-d810-44dd-8813-3dd018892b9e","name":"messagephoto","value":"={{ $json.body.image.imageUrl }}","type":"string"},{"id":"bc76b1f8-f9a5-4f12-9054-f5518119e044","name":"PhoneConnected","value":"={{ $json.body.connectedPhone }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-336,-208],"id":"45ab0b83-c125-43c5-af0e-07a067788631","name":"Dados"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"a101d655-9ea1-4d7d-a881-e2478360a6d7","leftValue":"={{ $json.fromMe }}","rightValue":"","operator":{"type":"boolean","operation":"false","singleValue":true}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[2480,1280],"id":"5e735727-3511-4b2b-8318-7b022946de0e","name":"Mensagem enviada pelo Bot"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"64cffcd2-671e-40c9-83a8-495f5f6da1cb","leftValue":"={{ $json.body.isGroup }}","rightValue":"","operator":{"type":"boolean","operation":"false","singleValue":true}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[2144,1440],"id":"855999fa-56d5-4986-9e5a-b70f74b51e9d","name":"Mensagem Individual"},{"parameters":{"url":"={{$('Constantes').item.json.env.api.endpoints.ultimasFaturas}}","options":{"splitIntoItems":false},"headerParametersUi":{"parameter":[{"name":"Client-Token","value":"={{ $('Constantes').item.json.env.clientTokenHeaderZapi }}"}]},"queryParametersUi":{"parameter":[{"name":"=matricula","value":"={{ $('Resposta lista').item.json.session.data.codigoLigacao }}"}]}},"name":"Faturas em Aberto","type":"n8n-nodes-base.httpRequest","typeVersion":2,"position":[3632,496],"id":"651066b8-cc53-4471-b459-6d053441745c","alwaysOutputData":true},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"7f66ad89-eeb4-4dac-be36-0a7f140a037d","leftValue":"={{ $json.action }}","rightValue":"gen_pdf","operator":{"type":"string","operation":"equals"}}],"combinator":"or"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[1856,1904],"id":"eb9a56e5-8312-4614-9dbb-3e856c51ebdb","name":"Gerar Fatura ?"},{"parameters":{"jsCode":"// NORMALIZADOR DE CLIQUE ‚Äî unifica todos os caminhos poss√≠veis do ID\nconst id =\n  // Bot√µes modernos\n  $json?.message?.content?.data?.button?.id ||\n  $json?.body?.buttonsResponseMessage?.buttonId ||\n  $json?.body?.buttonReply?.id ||\n  $json?.body?.button?.id ||\n  $json?.message?.button?.id ||\n\n  // Option List (novo): optionId\n  $json?.message?.content?.data?.list?.optionId ||\n  $json?.body?.listResponse?.optionId ||\n  $json?.body?.listResponseMessage?.optionId ||\n\n  // List (legado): rowId\n  $json?.message?.content?.data?.list?.rowId ||\n  $json?.body?.listResponse?.rowId ||\n  $json?.body?.listResponseMessage?.rowId ||\n\n  // fallback\n  '';\n\nconst isInvoiceClickAbertas = /^fat_sel_/.test(id);  // clique numa fatura da lista\nconst isActionClickAbertas  = /^fat_act_/.test(id);  // clique numa a√ß√£o (PIX/Barras/PDF)\nconst isInvoiceClickPagas = /^fatpaga_sel_/.test(id);  // clique numa fatura da lista\n\nreturn [{\n  json: {\n    ...$json,\n    clickId: id,\n    isInvoiceClickAbertas,\n    isActionClickAbertas,\n    isInvoiceClickPagas\n  }\n}];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-544,-208],"id":"28ca7ee4-1ae5-422e-83ea-d866a078b7ed","name":"Normalizador de Clique"},{"parameters":{"url":"={{$('Constantes').item.json.env.api.endpoints.ultimasFaturas}}","options":{"splitIntoItems":false},"headerParametersUi":{"parameter":[{"name":"Client-Token","value":"={{ $('Constantes').item.json.env.clientTokenHeaderZapi }}"}]},"queryParametersUi":{"parameter":[{"name":"=matricula","value":"={{ $('Gerar Fatura ?').item.json.detailRequest.matricula }}"},{"name":"referencia","value":"={{ $('Gerar Fatura ?').item.json.detailRequest.referencia }}"}]}},"name":"Consultar Fatura por refer√™ncia","type":"n8n-nodes-base.httpRequest","typeVersion":2,"position":[2528,2288],"id":"62499abc-a799-437c-949f-08fb9d87d00c","alwaysOutputData":true},{"parameters":{"mode":"runOnceForEachItem","jsCode":"// MONTAR RESPOSTA PIX/BARRAS ‚Äî code_only (somente o conte√∫do)\n// Mode: Run once for each item\ntry {\n  const HANDLER_NODE = \"Montar op√ß√µes da fatura selecionada (Em Aberto)\";   // ajuste se o nome do seu n√≥ for outro\n  const WEBHOOK_NODE = \"Receber mensagem\";\n\n  const get = (o,p)=>p.split('.').reduce((a,k)=> (a && a[k]!==undefined ? a[k] : null), o || null);\n  const unwrap = (v)=>{\n    if (Array.isArray(v)) return v;\n    if (v && typeof v === 'object') {\n      if (Array.isArray(v.data)) return v.data;\n      if (Array.isArray(v.body)) return v.body;\n      if (Array.isArray(v.rows)) return v.rows;\n      return [v];\n    }\n    return [];\n  };\n  const findField = (obj, paths)=> {\n    for (const p of paths) {\n      const val = get(obj, p);\n      if (val !== undefined && val !== null && String(val).trim() !== '') return String(val).trim();\n    }\n    return '';\n  };\n\n  const H = $item(0).$node[HANDLER_NODE]?.json || {};\n  const W = $item(0).$node[WEBHOOK_NODE]?.json || {};\n  const J = $json || {};\n\n  const phone =\n    H.phone || J.phone ||\n    get(J,'message.content.data.phone') || get(J,'body.phone') ||\n    get(W,'body.phone') || null;\n\n  const want =\n    H.detailRequest?.want || J.detailRequest?.want || null;   // 'pix' | 'bar'\n\n  const refTarget =\n    H.detailRequest?.referencia || J.detailRequest?.referencia || null;\n\n  if (!phone) return { json: { phone: null, message: 'erro: phone ausente' }, pairedItem: [{ item: 0 }] };\n  if (!want)  return { json: { phone, message: 'erro: a√ß√£o (pix/bar) ausente' }, pairedItem: [{ item: 0 }] };\n\n  const rows = unwrap(J);\n  let row = rows[0] || {};\n  if (refTarget) {\n    const hit = rows.find(r => (r?.mesAnoReferencia || r?.mes) === refTarget);\n    if (hit) row = hit;\n  }\n\n  const qr     = findField(row, ['qrCode','qrcode','payload','pix']);\n  const linha  = findField(row, ['linhaDigitavel','linha_digitavel','digitableLine','line']);\n  const barras = findField(row, ['codigoBarras','codigo_barras','barcode','barCode']);\n\n  if (want === 'pix') {\n    if (!qr) return { json: { phone, message: 'PIX indispon√≠vel para esta fatura.' }, pairedItem: [{ item: 0 }] };\n    return { json: { phone, message: qr }, pairedItem: [{ item: 0 }] };\n  }\n\n  // want === 'bar'\n  const text = linha || barras || '';\n  if (!text) return { json: { phone, message: 'Linha digit√°vel/c√≥digo indispon√≠vel.' }, pairedItem: [{ item: 0 }] };\n  return { json: { phone, message: text }, pairedItem: [{ item: 0 }] };\n\n} catch (e) {\n  return { json: { phone: null, message: `erro ao montar resposta: ${String(e?.message || e)}` }, pairedItem: [{ item: 0 }] };\n}\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[2960,2304],"id":"0bd76cd5-e8bc-4b15-820c-6c5e95013282","name":"Montar resposta Pix/Barras"},{"parameters":{"requestMethod":"POST","url":"={{ $('Constantes').item.json.env.endpoints.sendText }}","options":{},"bodyParametersUi":{"parameter":[{"name":"phone","value":"={{ $json.phone }}"},{"name":"message","value":"={{ $json.message }}"},{"name":"delayMessage","value":"2"}]},"headerParametersUi":{"parameter":[{"name":"Client-Token","value":"={{ $('Constantes').item.json.env.clientTokenHeaderZapi }}"},{"name":"Content-Type","value":"application/json"}]}},"name":"Apresentar PIX/Barras","type":"n8n-nodes-base.httpRequest","typeVersion":2,"position":[3536,2336],"id":"7840a8ad-bb1b-4aa7-a86c-38054ebb1a62"},{"parameters":{"requestMethod":"POST","url":"={{ $('Constantes').item.json.env.endpoints.sendText }}","options":{"splitIntoItems":false},"bodyParametersUi":{"parameter":[{"name":"phone","value":"={{ $json.phone }}"},{"name":"message","value":"=Finalizando a consulta de faturas em aberto ..."},{"name":"delayTyping","value":"6"}]},"headerParametersUi":{"parameter":[{"name":"Client-Token","value":"={{ $('Constantes').item.json.env.clientTokenHeaderZapi }}"},{"name":"Content-Type","value":"application/json"}]}},"name":"Feedback ao usu√°rio - Faturas em aberto","type":"n8n-nodes-base.httpRequest","typeVersion":2,"position":[3408,496],"id":"9c184e29-b6e9-4f4b-bf36-61f670451be2","alwaysOutputData":true},{"parameters":{"requestMethod":"POST","url":"={{ $('Constantes').item.json.env.endpoints.sendOptionList }}","options":{},"bodyParametersUi":{"parameter":[{"name":"phone","value":"={{$node[\"Receber mensagem\"].json[\"body\"][\"phone\"]}}"},{"name":"message","value":"={{ $json.reply }}"},{"name":"optionList","value":"={{ $json.optionList }}"}]},"headerParametersUi":{"parameter":[{"name":"Client-Token","value":"={{ $('Constantes').item.json.env.clientTokenHeaderZapi }}"}]}},"name":"Envia lista Op√ß√µes","type":"n8n-nodes-base.httpRequest","typeVersion":2,"position":[3152,1184],"id":"a707f8a1-0ccc-4929-a6ab-af64efe92289"},{"parameters":{"requestMethod":"POST","url":"={{ $('Constantes').item.json.env.endpoints.sendText }}","options":{"splitIntoItems":false},"bodyParametersUi":{"parameter":[{"name":"phone","value":"={{ $json.phone }}"},{"name":"message","value":"=Gerando informa√ß√µes para pagamento ..."},{"name":"delayTyping","value":"2"}]},"headerParametersUi":{"parameter":[{"name":"Client-Token","value":"={{ $('Constantes').item.json.env.clientTokenHeaderZapi }}"},{"name":"Content-Type","value":"application/json"}]}},"name":"Feedback ao usu√°rio - PIX/Barras","type":"n8n-nodes-base.httpRequest","typeVersion":2,"position":[2096,2080],"id":"48db306d-190e-4899-bb2b-834c165763f4","alwaysOutputData":true},{"parameters":{"requestMethod":"POST","url":"={{ $('Constantes').item.json.env.endpoints.sendText }}","options":{},"bodyParametersUi":{"parameter":[{"name":"phone","value":"={{ $json.phone }}"},{"name":"message","value":"=Finalizando a consulta de hist√≥rico ..."},{"name":"delayTyping","value":"5"}]},"headerParametersUi":{"parameter":[{"name":"Client-Token","value":"={{ $('Constantes').item.json.env.clientTokenHeaderZapi }}"},{"name":"Content-Type","value":"application/json"}]}},"name":"Feedback ao usu√°rio - Historico","type":"n8n-nodes-base.httpRequest","typeVersion":2,"position":[3408,1008],"id":"589f51fc-6fbe-4692-8acf-aca4ab476f5e","alwaysOutputData":true},{"parameters":{"requestMethod":"POST","url":"={{ $('Constantes').item.json.env.endpoints.sendText }}","options":{"splitIntoItems":false},"bodyParametersUi":{"parameter":[{"name":"phone","value":"={{ $json.phone }}"},{"name":"message","value":"=Validando informa√ß√µes ..."},{"name":"delayTyping","value":"4"}]},"headerParametersUi":{"parameter":[{"name":"Client-Token","value":"={{ $('Constantes').item.json.env.clientTokenHeaderZapi }}"},{"name":"Content-Type","value":"application/json"}]}},"name":"Feedback ao usu√°rio - Baixar Fatura1","type":"n8n-nodes-base.httpRequest","typeVersion":2,"position":[144,736],"id":"a22b4df9-e91e-432d-a551-2504570c625e","alwaysOutputData":true},{"parameters":{"mode":"runOnceForEachItem","jsCode":"const DadosGravacao = {\n  ligacao: $(\"Router\").first().json.session.data.codigoLigacao ?? \"\",\n  phone: $(\"Router\").first().json.session.phone ?? \"\",\n  phoneConectado: $(\"Router\").first().json.session.phoneconectado ?? \"\",\n  observacao: \"\",\n  dataHora: new Date().toISOString(),\n  servico : 4\n};\n\nreturn DadosGravacao;\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[4304,1008],"id":"b907009f-43b6-47c0-b30d-2ca1768897d2","name":"Gravar - Hist√≥rico de Consumo"},{"parameters":{"mode":"runOnceForEachItem","jsCode":"const DadosGravacao = {\n  ligacao: $(\"Router\").first().json.session.data.codigoLigacao ?? \"\",\n  phone: $(\"Router\").first().json.session.phone ?? \"\",\n  phoneConectado: $(\"Router\").first().json.session.phoneconectado ?? \"\",\n  observacao: \"\",\n  dataHora: new Date().toISOString(),\n  servico : 6\n};\n\nreturn DadosGravacao;\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[3888,144],"id":"47b977d0-c3b7-4bac-98da-12cec597991c","name":"Gravar - Localiza√ß√£o"},{"parameters":{"mode":"runOnceForEachItem","jsCode":"const DadosGravacao = {\n  ligacao: $(\"Router\").first().json.session.data.codigoLigacao ?? \"\",\n  phone: $(\"Router\").first().json.session.phone ?? \"\",\n  phoneConectado: $(\"Router\").first().json.session.phoneconectado ?? \"\",\n  observacao: \"\",\n  dataHora: new Date().toISOString(),\n  servico : 5\n};\n\nreturn DadosGravacao;\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[4224,1792],"id":"58107f1a-e8fa-4a24-8dbf-4a31b3535b8d","name":"Gravar - Ouvidoria"},{"parameters":{"mode":"runOnceForEachItem","jsCode":"const servico = $('Montar op√ß√µes da fatura selecionada (Em Aberto)').item.json.detailRequest.want;\n\nconst DadosGravacao = {\n  ligacao: $(\"Router\").first().json.session.data.codigoLigacao ?? \"\",\n  phone: $(\"Router\").first().json.session.phone ?? \"\",\n  phoneConectado: $(\"Router\").first().json.session.phoneconectado ?? \"\",\n  observacao: \"\",\n  dataHora: new Date().toISOString(),\n  servico : (servico || \"\").toUpperCase() === \"PIX\" ? 2 : 3\n};\n\nreturn DadosGravacao;\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[4208,2288],"id":"7d7a2d4a-596a-4a19-a8ac-904d855330ab","name":"Gravar - PIX ou Barras"},{"parameters":{"requestMethod":"POST","url":"={{$('Constantes').item.json.env.api.endpoints.ouvidoria}}","options":{"bodyContentCustomMimeType":"","splitIntoItems":false},"bodyParametersUi":{"parameter":[{"name":"descricaoDenuncia","value":"={{ $json.message.content.data.text }}"},{"name":"tipoRequerimento","value":"={{$('Constantes').item.json.env.api.configuracao.tipoRequerimento}}"}]}},"name":"Gravar ouvidoria","type":"n8n-nodes-base.httpRequest","typeVersion":2,"position":[3072,1840],"id":"77379fef-842b-4220-b349-cacb6de28582","alwaysOutputData":true},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"2eab16b9-b8b1-4220-b549-52c9d0c06861","leftValue":"={{ $('Preparar Lista - Faturas em Aberto').item.json.message }}","rightValue":"=N√£o","operator":{"type":"string","operation":"contains"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[4272,496],"id":"0abfc9a6-9364-4e78-8dae-0db3fd0e4266","name":"N√£o h√° faturas em aberto ?"},{"parameters":{"requestMethod":"POST","url":"={{ $('Constantes').item.json.env.endpoints.sendText }}","options":{"splitIntoItems":false},"bodyParametersUi":{"parameter":[{"name":"phone","value":"={{ $json.phone }}"},{"name":"message","value":"=Finalizando a consulta de faturas pagas ..."},{"name":"delayTyping","value":"6"}]},"headerParametersUi":{"parameter":[{"name":"Client-Token","value":"={{ $('Constantes').item.json.env.clientTokenHeaderZapi }}"},{"name":"Content-Type","value":"application/json"}]}},"name":"Feedback ao usu√°rio - Faturas pagas","type":"n8n-nodes-base.httpRequest","typeVersion":2,"position":[3408,720],"id":"a3263f58-5fa4-48a2-9b31-c42beb6ab2c0","alwaysOutputData":true},{"parameters":{"url":"={{$('Constantes').item.json.env.api.endpoints.faturasPagas}}","options":{"splitIntoItems":false},"headerParametersUi":{"parameter":[{"name":"Client-Token","value":"={{ $('Constantes').item.json.env.clientTokenHeaderZapi }}"}]},"queryParametersUi":{"parameter":[{"name":"=matricula","value":"={{ $('Resposta lista').item.json.session.data.codigoLigacao }}"}]}},"name":"Faturas Pagas","type":"n8n-nodes-base.httpRequest","typeVersion":2,"position":[3632,720],"id":"fb99cb43-17dc-4f5d-a38a-28b6557dbc70","alwaysOutputData":true},{"parameters":{"jsCode":"// SEND-BUTTON-LIST (stateless) ‚Äî Z-API /send-button-list\n// MODO: Run once for all items\n// Sa√≠da por lote: { phone, message, buttonList } + pairedItem\n\nconst WEBHOOK_NODE = \"Receber mensagem\";\n\n// helpers\nconst tryParse = x => { if (typeof x !== 'string') return x; const s=x.trim(); if(!(s.startsWith('[')||s.startsWith('{'))) return x; try{ return JSON.parse(s);}catch{ return x;} };\nconst isObj = v => v && typeof v === 'object' && !Array.isArray(v);\nconst toNum = s => Number(String(s ?? '').replace(/[^\\d.-]/g,'')) || 0;\nconst money = n => ('R$' + new Intl.NumberFormat('pt-BR',{minimumFractionDigits:2}).format(n)).replace('R$ ','R$');\nconst chunk = (arr,n)=>{const o=[]; for(let i=0;i<arr.length;i+=n)o.push(arr.slice(i,i+n)); return o;};\nconst b64u = {\n  enc: (obj) => Buffer.from(JSON.stringify(obj),'utf8')\n    .toString('base64').replace(/\\+/g,'-').replace(/\\//g,'_').replace(/=+$/,'')\n};\nfunction unwrapArrayLike(j){\n  const v = tryParse(j);\n  if (Array.isArray(v)) return v;\n  if (isObj(v)) {\n    if (Array.isArray(v.rows))   return v.rows;\n    if (Array.isArray(v.result)) return v.result;\n    if (Array.isArray(v.data))   return v.data;\n    if (Array.isArray(v.body))   return v.body;\n    const k = Object.keys(v);\n    if (['mesAnoReferencia','mes','vencimento','valor','valorFaturado','total'].some(x=>k.includes(x))) return [v];\n  }\n  return [];\n}\nfunction extractRows(items){\n  if (!items.length) return [];\n  const j0 = items[0]?.json;\n  if (Array.isArray(j0)) return j0;\n  const w = unwrapArrayLike(j0); if (w.length) return w;\n  if (items.length>1) return items.map(i=>i.json);\n  return [];\n}\n\n// entrada\nconst items = $input.all();\nconst phone =\n  $json.phone ??\n  $item(0).$node[WEBHOOK_NODE]?.json?.body?.phone ??\n  null;\n\n// pegue a mesma matr√≠cula que voc√™ usou no HTTP ‚ÄúFaturas pagas‚Äù\nconst codigoLigacao =\n  $json.matricula ??\n  $item(0).$node[WEBHOOK_NODE]?.json?.session?.data?.codigoLigacao ??\n  $json.session?.data?.codigoLigacao ??\n  null;\n\nlet rows = extractRows(items).filter(r => r && (r.mesAnoReferencia || r.mes || r.vencimento));\nif (!rows.length) {\n  return [{\n    json: { phone, message: 'N√£o h√° faturas pagas no momento.', buttonList: null },\n    pairedItem: [{ item: 0 }]\n  }];\n}\n\n// normaliza e monta tokens com { m, r }\nconst norm = rows.map((r, idx) => {\n  const rref = String(r.mesAnoReferencia ?? r.mes ?? '').trim(); // <- rref (n√£o ‚Äúref‚Äù)\n  const venc = String(r.vencimento ?? '').trim();\n  const valN = toNum(r.valor ?? r.valorFaturado ?? r.total);\n  const token = 'T.' + b64u.enc({ m: codigoLigacao, r: rref }); // base64url {m,r}\n  return { token, ref: rref, venc, valN, idx };\n});\n\nconst batches = chunk(norm, 6);\nconst out = [];\n\nfor (let b = 0; b < batches.length; b++) {\n  const batch = batches[b];\n\n  const message = b === 0\n    ? '‚úÖ *Faturas pagas*\\n\\nAqui est√£o as suas *6 √∫ltimas faturas*.\\nToque sobre a fatura desejada para baixar.'\n    : 'Mais op√ß√µes';\n\n  const buttonList = {\n    buttons: batch.map((f, i) => ({\n      id: `fatpaga_sel_${f.token}`,\n      // use f.ref aqui (nada de ‚Äúref‚Äù solto)\n      label: `${i+1}) ${f.ref} ¬∑ ${money(f.valN)}`.slice(0, 20)\n    }))\n  };\n\n  out.push({ json: { phone, message, buttonList }, pairedItem: [{ item: 0 }] });\n}\n\nreturn out;\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[3856,720],"id":"2dd39738-6204-4c20-9a1c-a5b4aa0f00ae","name":"Preparar Lista - Faturas Pagas"},{"parameters":{"requestMethod":"POST","url":"={{ $('Constantes').item.json.env.endpoints.sendButtonList}}","options":{"fullResponse":true,"splitIntoItems":false},"bodyParametersUi":{"parameter":[{"name":"phone","value":"={{ $json.phone }}"},{"name":"message","value":"={{ $json.message }}"},{"name":"buttonList","value":"={{ $json.buttonList }}"}]},"headerParametersUi":{"parameter":[{"name":"Client-Token","value":"={{ $('Constantes').item.json.env.clientTokenHeaderZapi }}"},{"name":"Content-Type","value":"application/json"}]}},"name":"Apresentar Faturas pagas","type":"n8n-nodes-base.httpRequest","typeVersion":2,"position":[4064,720],"id":"9000be24-b06a-4367-b288-402a2e681b05","alwaysOutputData":true},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"2eab16b9-b8b1-4220-b549-52c9d0c06861","leftValue":"={{ $('Preparar Lista - Faturas Pagas').item.json.message }}","rightValue":"N√£o","operator":{"type":"string","operation":"contains"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[4272,720],"id":"4282365d-3a2d-4b5f-8596-c9b4d847395e","name":"N√£o h√° faturas pagas ?","onError":"continueRegularOutput"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":1},"conditions":[{"id":"552c6e23-e71b-4b3e-ba9d-747a56d5978e","leftValue":"={{ $('Normalizador de Clique').item.json.isInvoiceClickAbertas }}","rightValue":"fat_sel","operator":{"type":"boolean","operation":"true","singleValue":true}}],"combinator":"or"},"options":{}},"id":"dbc4980b-fa26-458d-bb85-94bf4b7a7a21","name":"√â clique de faturas em aberto","type":"n8n-nodes-base.if","typeVersion":2,"position":[656,2192]},{"parameters":{"jsCode":"// SEND-BUTTON-LIST (stateless) ‚Äî Z-API /send-button-list\n// MODO: Run once for all items\n// Sa√≠da por lote: { phone, message, buttonList } + pairedItem\n\nconst WEBHOOK_NODE = \"Receber mensagem\";\n\n// helpers\nconst tryParse = x => { if (typeof x !== 'string') return x; const s=x.trim(); if(!(s.startsWith('[')||s.startsWith('{'))) return x; try{ return JSON.parse(s);}catch{ return x;} };\nconst isObj = v => v && typeof v === 'object' && !Array.isArray(v);\nconst toNum = s => Number(String(s ?? '').replace(/[^\\d.-]/g,'')) || 0;\nconst money = n => ('R$' + new Intl.NumberFormat('pt-BR',{minimumFractionDigits:2}).format(n)).replace('R$ ','R$');\nconst chunk = (arr,n)=>{const o=[]; for(let i=0;i<arr.length;i+=n)o.push(arr.slice(i,i+n)); return o;};\nconst b64u = {\n  enc: (obj) => Buffer.from(JSON.stringify(obj),'utf8')\n    .toString('base64').replace(/\\+/g,'-').replace(/\\//g,'_').replace(/=+$/,'')\n};\nfunction unwrapArrayLike(j){\n  const v = tryParse(j);\n  if (Array.isArray(v)) return v;\n  if (isObj(v)) {\n    if (Array.isArray(v.rows))   return v.rows;\n    if (Array.isArray(v.result)) return v.result;\n    if (Array.isArray(v.data))   return v.data;\n    if (Array.isArray(v.body))   return v.body;\n    const k = Object.keys(v);\n    if (['mesAnoReferencia','mes','vencimento','valor','valorFaturado','total'].some(x=>k.includes(x))) return [v];\n  }\n  return [];\n}\nfunction extractRows(items){\n  if (!items.length) return [];\n  const j0 = items[0]?.json;\n  if (Array.isArray(j0)) return j0;\n  const w = unwrapArrayLike(j0); if (w.length) return w;\n  if (items.length>1) return items.map(i=>i.json);\n  return [];\n}\n\n// entrada\nconst items = $input.all();\nconst phone =\n  $json.phone ??\n  $item(0).$node[WEBHOOK_NODE]?.json?.body?.phone ??\n  null;\n\n// pegue a mesma matr√≠cula que voc√™ usou no HTTP ‚ÄúFaturas em aberto‚Äù\nconst codigoLigacao =\n  $json.matricula ??\n  $item(0).$node[WEBHOOK_NODE]?.json?.session?.data?.codigoLigacao ??\n  $json.session?.data?.codigoLigacao ??\n  null;\n\nlet rows = extractRows(items).filter(r => r && (r.mesAnoReferencia || r.mes || r.vencimento));\nif (!rows.length) {\n  return [{\n    json: { phone, message: 'N√£o h√° faturas em aberto no momento.', buttonList: null },\n    pairedItem: [{ item: 0 }]\n  }];\n}\n\n// normaliza e monta tokens com { m, r }\nconst norm = rows.map((r, idx) => {\n  const rref = String(r.mesAnoReferencia ?? r.mes ?? '').trim(); // <- rref (n√£o ‚Äúref‚Äù)\n  const venc = String(r.vencimento ?? '').trim();\n  const valN = toNum(r.valor ?? r.valorFaturado ?? r.total);\n  const token = 'T.' + b64u.enc({ m: codigoLigacao, r: rref }); // base64url {m,r}\n  return { token, ref: rref, venc, valN, idx };\n});\n\n// 12 bot√µes por mensagem\nconst batches = chunk(norm, 12);\nconst out = [];\n\nfor (let b = 0; b < batches.length; b++) {\n  const batch = batches[b];\n\n  const message = b === 0\n    ? 'üìÑ *Faturas em aberto*\\n\\nAqui est√£o as suas faturas *mais recentes*.\\nListamos no m√°ximo 12 para facilitar sua visualiza√ß√£o'\n    : 'Mais op√ß√µes';\n\n  const buttonList = {\n    buttons: batch.map((f, i) => ({\n      id: `fat_sel_${f.token}`,\n      // use f.ref aqui (nada de ‚Äúref‚Äù solto)\n      label: `${i+1}) ${f.ref} ¬∑ ${money(f.valN)}`.slice(0, 20)\n    }))\n  };\n\n  out.push({ json: { phone, message, buttonList }, pairedItem: [{ item: 0 }] });\n}\n\nreturn out;\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[3856,496],"id":"f9919c6c-b76a-4712-aa13-07651e449de1","name":"Preparar Lista - Faturas em Aberto"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":1},"conditions":[{"id":"552c6e23-e71b-4b3e-ba9d-747a56d5978e","leftValue":"={{ $('Normalizador de Clique').item.json.isInvoiceClickPagas }}","rightValue":"fat_sel","operator":{"type":"boolean","operation":"true","singleValue":true}}],"combinator":"or"},"options":{}},"id":"9ae73cb2-5790-4841-973f-4f1061d992b6","name":"√â clique de faturas pagas","type":"n8n-nodes-base.if","typeVersion":2,"position":[1024,2112]},{"parameters":{"jsCode":"// PROBE: inspeciona faturasMap[token] no momento do clique\nconst WEBHOOK_NODE = \"Receber mensagem\";\nconst get = (o,p) => p.split('.').reduce((a,k)=> (a && a[k]!==undefined ? a[k] : null), o || null);\nconst parseMaybe = v => (typeof v === 'string' ? (v.trim() ? JSON.parse(v) : {}) : (v || {}));\n\nconst W = $item(0).$node[WEBHOOK_NODE]?.json || {};\nconst J = $json || {};\n\nconst btnId =\n  get(J,'body.buttonsResponseMessage.buttonId') ||\n  get(J,'buttonsResponseMessage.buttonId') ||\n  get(J,'message.content.data.button.id') ||\n  get(W,'body.buttonsResponseMessage.buttonId') ||\n  get(W,'buttonsResponseMessage.buttonId') ||\n  get(W,'message.content.data.button.id') || '';\n\nconst m = String(btnId).trim().match(/^fatpaga_sel_(.+)$/);\nconst token = m ? m[1] : null;\n\nconst rawData = get(J,'session.data') ?? J.data_json ?? get(J,'_session.data') ??\n                get(W,'session.data') ?? W.data_json ?? get(W,'_session.data') ?? {};\nconst data = parseMaybe(rawData);\nconst f = (token && data.faturasMap) ? data.faturasMap[token] : null;\n\nreturn [{\n  json: {\n    token,\n    hasMap: !!data.faturasMap,\n    fatura: f || null\n  }\n}];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1376,2192],"id":"abc8c87c-e137-41a5-92e5-b3534cf2f246","name":"Montar lista de faturas pagas"},{"parameters":{"mode":"runOnceForEachItem","jsCode":"// A√á√ïES DA FATURA ‚Äî gera 3 bot√µes com o mesmo TOKEN (stateless)\n// Run once for each item\ntry {\n  const matricula = $('√â clique de faturas pagas').item.json.data_json.codigoLigacao;\n  const phone = $('√â clique de faturas pagas').item.json.phone;\n  let mensagem = $('√â clique de faturas pagas').item.json.message.content.data.text;\n  const referencia = mensagem.match(/(\\d{2}\\/\\d{4})/)?.[1];\n\nreturn { json: { phone, action:'gen_pdf', pdfRequest: { matricula, referencia } }, pairedItem: [{ item: 0 }] };\n}catch (e) {\n  return { json: { phone:null, action:'noop', message:`erro ao selecionar fatura paga` }, pairedItem: [{ item: 0 }] };\n}\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1744,2368],"id":"fd4f62c9-e2a8-435c-be0f-5eb0d88a3a6b","name":"A√ß√µes das faturas pagas"},{"parameters":{"mode":"runOnceForEachItem","jsCode":"// A√á√ïES DA FATURA ‚Äî gera 3 bot√µes com o mesmo TOKEN (stateless)\n// Run once for each item\ntry {\n  const WEBHOOK_NODE = \"Receber mensagem\";\n  const get = (o,p)=>p.split('.').reduce((a,k)=> (a&&a[k]!==undefined?a[k]:null), o||null);\n\n  const W = $item(0).$node[WEBHOOK_NODE]?.json || {};\n  const J = $json || {};\n\n  const phone = J.phone ?? get(J,'message.content.data.phone') ?? get(J,'body.phone') ?? get(W,'body.phone') ?? null;\n\n  let clickId =\n    get(J,'body.buttonsResponseMessage.buttonId') ||\n    get(J,'buttonsResponseMessage.buttonId') ||\n    get(J,'message.content.data.button.id') ||\n    get(W,'body.buttonsResponseMessage.buttonId') ||\n    get(W,'buttonsResponseMessage.buttonId') ||\n    get(W,'message.content.data.button.id') || '';\n\n  clickId = String(clickId).trim();\n  if (!clickId.startsWith('fat_sel_')) {\n    return { json: { phone, message: 'Selecione uma fatura primeiro.', buttonList: null }, pairedItem: [{ item: 0 }] };\n  }\n\n  const token = clickId.slice('fat_sel_'.length);\n\n  const buttonList = {\n    buttons: [\n      { id: `fat_act_pix_${token}`,  label: \"Copiar QRCode PIX ‚ùñ\" },\n      { id: `fat_act_bar_${token}`,  label: \"Copiar C√≥digo de barras ùÑÉùÑÉùÑÇùÑÇùÑÄùÑÅùÑÉùÑÇùÑÇùÑÉ\" },\n      { id: `fat_act_pdf_${token}`,  label: \"Baixar fatura ‚¨áÔ∏è\" }\n    ]\n  };\n\n  return {\n    json: { phone, message: 'O que deseja realizar ?', buttonList },\n    pairedItem: [{ item: 0 }]\n  };\n\n} catch (e) {\n  return { json: { phone: null, message: `erro ao preparar a√ß√µes: ${String(e?.message||e)}`, buttonList: null }, pairedItem: [{ item: 0 }] };\n}\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1264,2528],"id":"04b8ecb4-53d9-4e1b-a108-a42a123e6f51","name":"A√ß√µes das faturas em aberto"},{"parameters":{"jsCode":"// PROBE: inspeciona faturasMap[token] no momento do clique\nconst WEBHOOK_NODE = \"Receber mensagem\";\nconst get = (o,p) => p.split('.').reduce((a,k)=> (a && a[k]!==undefined ? a[k] : null), o || null);\nconst parseMaybe = v => (typeof v === 'string' ? (v.trim() ? JSON.parse(v) : {}) : (v || {}));\n\nconst W = $item(0).$node[WEBHOOK_NODE]?.json || {};\nconst J = $json || {};\n\nconst btnId =\n  get(J,'body.buttonsResponseMessage.buttonId') ||\n  get(J,'buttonsResponseMessage.buttonId') ||\n  get(J,'message.content.data.button.id') ||\n  get(W,'body.buttonsResponseMessage.buttonId') ||\n  get(W,'buttonsResponseMessage.buttonId') ||\n  get(W,'message.content.data.button.id') || '';\n\nconst m = String(btnId).trim().match(/^fat_(?:sel|act_[a-z]+)_(.+)$/);\nconst token = m ? m[1] : null;\n\nconst rawData = get(J,'session.data') ?? J.data_json ?? get(J,'_session.data') ??\n                get(W,'session.data') ?? W.data_json ?? get(W,'_session.data') ?? {};\nconst data = parseMaybe(rawData);\nconst f = (token && data.faturasMap) ? data.faturasMap[token] : null;\n\nreturn [{\n  json: {\n    token,\n    hasMap: !!data.faturasMap,\n    fatura: f || null,\n    fields: f ? {\n      qrCode: !!(f.qrCode || f.qrcode),\n      linhaDigitavel: !!(f.linhaDigitavel || f.linha_digitavel),\n      codigoBarras: !!(f.codigoBarras || f.codigo_barras)\n    } : null\n  }\n}];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[960,2448],"id":"85fb12cd-d2b3-4266-ac40-ac33491f0272","name":"Montar lista de faturas em aberto"},{"parameters":{"requestMethod":"POST","url":"={{ $('Constantes').item.json.env.endpoints.sendButtonList}}","options":{"fullResponse":true,"splitIntoItems":false},"bodyParametersUi":{"parameter":[{"name":"phone","value":"={{ $json.phone }}"},{"name":"message","value":"={{ $json.message }}"},{"name":"buttonList","value":"={{ $json.buttonList }}"}]},"headerParametersUi":{"parameter":[{"name":"Client-Token","value":"={{ $('Constantes').item.json.env.clientTokenHeaderZapi }}"},{"name":"Content-Type","value":"application/json"}]}},"name":"Apresentar faturas em aberto","type":"n8n-nodes-base.httpRequest","typeVersion":2,"position":[1600,2640],"id":"380fdf7b-ead6-4ff9-ae3f-a254b30978f2","alwaysOutputData":true},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":1},"conditions":[{"id":"552c6e23-e71b-4b3e-ba9d-747a56d5978e","leftValue":"={{ $('Normalizador de Clique').item.json.isActionClickAbertas }}","rightValue":"fat_act","operator":{"type":"boolean","operation":"true","singleValue":true}}],"combinator":"or"},"options":{}},"id":"75490c8e-629f-4167-81d1-2e0e526ff171","name":"√â clique de a√ß√£o de faturas em aberto","type":"n8n-nodes-base.if","typeVersion":2,"position":[1328,1856]},{"parameters":{"mode":"runOnceForEachItem","jsCode":"// HANDLER A√á√ïES (pix/bar/pdf) ‚Äî stateless, com fallback para matr√≠cula\ntry {\n  const WEBHOOK_NODE = \"Receber mensagem\";\n  const get = (o,p)=>p.split('.').reduce((a,k)=> (a&&a[k]!==undefined?a[k]:null), o||null);\n  const b64uDec = s => {\n    const pad = s.length % 4 === 2 ? '==' : s.length % 4 === 3 ? '=' : '';\n    const b64 = s.replace(/-/g,'+').replace(/_/g,'/') + pad;\n    return JSON.parse(Buffer.from(b64,'base64').toString('utf8'));\n  };\n\n  const W = $item(0).$node[WEBHOOK_NODE]?.json || {};\n  const J = $json || {};\n  const phone = J.phone ?? get(J,'message.content.data.phone') ?? get(J,'body.phone') ?? get(W,'body.phone') ?? null;\n\n  const btnId =\n    get(J,'body.buttonsResponseMessage.buttonId') ||\n    get(J,'buttonsResponseMessage.buttonId') ||\n    get(J,'message.content.data.button.id') ||\n    get(W,'body.buttonsResponseMessage.buttonId') ||\n    get(W,'buttonsResponseMessage.buttonId') ||\n    get(W,'message.content.data.button.id') || '';\n\n  const mId = String(btnId).trim().match(/^fat_act_(pix|bar|pdf)_(.+)$/);\n  if (!mId) return { json: { phone, action:'noop', message:'a√ß√£o n√£o reconhecida.' }, pairedItem: [{ item: 0 }] };\n\n  const kind = mId[1];\n  const tok  = mId[2];\n\n  let matricula = null, referencia = null;\n\n  // T.{base64url:{m,r}}\n  const mTokA = tok.match(/^T\\.(.+)$/);\n  if (mTokA) {\n    try { const pay = b64uDec(mTokA[1]) || {};\n      matricula  = pay.m ?? null;\n      referencia = (pay.r || '').replace('-', '/');\n    } catch {}\n  }\n\n  // fallback de refer√™ncia: MM-AAAA(_...)\n  if (!referencia) {\n    const mc = tok.match(/^(\\d{2})-(\\d{4})(?:_.+)?$/);\n    if (mc) referencia = `${mc[1]}/${mc[2]}`;\n  }\n\n  // fallback de matr√≠cula: webhook.session.data.codigoLigacao\n  if (!matricula) {\n    matricula =\n      get(J,'session.data.codigoLigacao') ||\n      get(W,'session.data.codigoLigacao') || null;\n  }\n\n  if (!referencia) {\n    return { json: { phone, action:'send_text', message:'N√£o consegui identificar a refer√™ncia da fatura. Liste novamente.' }, pairedItem: [{ item: 0 }] };\n  }\n\n  if (kind === 'pdf') {\n    return { json: { phone, action:'gen_pdf', pdfRequest: { matricula, referencia } }, pairedItem: [{ item: 0 }] };\n  }\n\n  // pix/bar ‚Üí reconsulta detalhe da fatura (matricula opcional; se sua API exigir, j√° vir√° preenchida pelo passo 1)\n  return { json: { phone, action:'fetch_detail', detailRequest: { matricula, referencia, want: kind } }, pairedItem: [{ item: 0 }] };\n\n} catch (e) {\n  return { json: { phone:null, action:'noop', message:`erro no handler: ${String(e?.message||e)}` }, pairedItem: [{ item: 0 }] };\n}\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1616,1888],"id":"cb4315db-b584-421b-a634-c5a7f0ddaafa","name":"Montar op√ß√µes da fatura selecionada (Em Aberto)"},{"parameters":{"mode":"runOnceForEachItem","jsCode":"// PREPARAR PDF PARA Z-API ‚Äî gera 3 payloads poss√≠veis\n// MODO: Run once for each item\n\ntry {\n  const get = (o,p)=>p.split('.').reduce((a,k)=> (a && a[k]!==undefined ? a[k] : null), o || null);\n\n  // 1) phone: busque em locais confi√°veis do seu flow\n  const phoneRaw =\n    $json.phone ||\n    get($item(0).$node[\"A√ß√µes das faturas pagas\"]?.json || {}, \"phone\") ||\n    get($item(0).$node[\"Receber mensagem\"]?.json || {}, \"body.phone\") ||\n    null;\n\n  const phone = phoneRaw ? String(phoneRaw).replace(/\\D/g,'') : null;\n\n  // 2) refer√™ncia para nome do arquivo\n  const referencia =\n    $json.referencia ||\n    get($item(0).$node[\"A√ß√µes das faturas pagas\"]?.json || {}, \"pdfRequest.referencia\") ||\n    \"fatura\";\n\n  // 3) capturar base64 de forma tolerante\n  let raw = null;\n\n  // Se o HTTP est√° em \"Response Format = String\", $json costuma ser **string**\n  if (typeof $json === \"string\") raw = $json;\n  if (!raw && typeof $json?.body === \"string\") raw = $json.body;\n\n  // fallback caso sua API √†s vezes venha em JSON\n  if (!raw) {\n    raw =\n      $json.pdfBase64 || $json.base64 || $json.fileBase64 || $json.documentBase64 ||\n      $json.data || $json.content || $json.pdf || null;\n  }\n\n  if (!phone || !raw) {\n    return {\n      json: {\n        ok: false,\n        reason: !phone ? \"phone_missing\" : \"base64_missing\",\n        phone: phone || null\n      }\n    };\n  }\n\n  // 4) limpar prefixo e espa√ßos/quebras; re-pad opcional\n  let base64 = String(raw).trim()\n    .replace(/^data:.*?;base64,/i, \"\")\n    .replace(/\\s+/g, \"\");\n\n  // checagem: parece PDF?\n  const looksPdf = base64.startsWith(\"JVBER\");\n  // bytes estimados: 3/4 do length\n  const approxBytes = Math.floor(base64.length * 3 / 4);\n  const approxMB = (approxBytes / (1024*1024)).toFixed(2);\n\n  // limite t√≠pico do WhatsApp ~16 MB\n  const tooBig = approxBytes > 16 * 1024 * 1024;\n\n  const fileName = `Fatura_${String(referencia).replace(/\\W+/g,'-')}.pdf`;\n  const caption  = `‚úÖ Fatura ${referencia}`;\n  const mimeType = \"application/pdf\";\n\n  // montagem de 3 payloads poss√≠veis (escolha UM nos HTTPs abaixo)\n  const payloadA = { // A) \"flat\" ‚Äî muitas inst√¢ncias usam /send-file-from-base64\n    phone, fileName, base64, caption, mimeType\n  };\n  const payloadB = { // B) objeto document\n    phone, document: { fileName, base64, mimeType }, caption\n  };\n  const payloadC = { // C) algumas exigem campo \"file\" no lugar de \"base64\"\n    phone, fileName, file: base64, caption, mimeType\n  };\n\n  return {\n    json: {\n      ok: !tooBig,\n      warn: tooBig ? `PDF ~${approxMB}MB pode ultrapassar limite do WhatsApp` : null,\n      looksPdf,\n      approxMB,\n      payloadA,\n      payloadB,\n      payloadC\n    }\n  };\n\n} catch (e) {\n  return { json: { ok: false, error: `prep_fail: ${String(e?.message || e)}` } };\n}\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[2960,2544],"id":"c2ac51f2-3776-4e58-8604-5b0bbbfd7812","name":"Montar PDF de fatura paga"},{"parameters":{"mode":"runOnceForEachItem","jsCode":"// PREPARAR PDF PARA Z-API ‚Äî gera 3 payloads poss√≠veis\n// MODO: Run once for each item\n\ntry {\n  const get = (o,p)=>p.split('.').reduce((a,k)=> (a && a[k]!==undefined ? a[k] : null), o || null);\n\n  // 1) phone: busque em locais confi√°veis do seu flow\n  const phoneRaw =\n    $json.phone ||\n    get($item(0).$node[\"Montar op√ß√µes da fatura selecionada (Em Aberto)\"]?.json || {}, \"phone\") ||\n    get($item(0).$node[\"Receber mensagem\"]?.json || {}, \"body.phone\") ||\n    null;\n\n  // sanitiza phone para E.164 (somente d√≠gitos)\n  const phone = phoneRaw ? String(phoneRaw).replace(/\\D/g,'') : null;\n\n  // 2) refer√™ncia para nome do arquivo\n  const referencia =\n    $json.referencia ||\n    get($item(0).$node[\"Montar op√ß√µes da fatura selecionada (Em Aberto)\"]?.json || {}, \"pdfRequest.referencia\") ||\n    get($item(0).$node[\"Consultar Fatura por refer√™ncia\"]?.json || {}, \"mesAnoReferencia\") ||\n    \"fatura\";\n\n  // 3) capturar base64 de forma tolerante\n  let raw = null;\n\n  // Se o HTTP est√° em \"Response Format = String\", $json costuma ser **string**\n  if (typeof $json === \"string\") raw = $json;\n  if (!raw && typeof $json?.body === \"string\") raw = $json.body;\n\n  // fallback caso sua API √†s vezes venha em JSON\n  if (!raw) {\n    raw =\n      $json.pdfBase64 || $json.base64 || $json.fileBase64 || $json.documentBase64 ||\n      $json.data || $json.content || $json.pdf || null;\n  }\n\n  if (!phone || !raw) {\n    return {\n      json: {\n        ok: false,\n        reason: !phone ? \"phone_missing\" : \"base64_missing\",\n        phone: phone || null\n      }\n    };\n  }\n\n  // 4) limpar prefixo e espa√ßos/quebras; re-pad opcional\n  let base64 = String(raw).trim()\n    .replace(/^data:.*?;base64,/i, \"\")\n    .replace(/\\s+/g, \"\");\n\n  // checagem: parece PDF?\n  const looksPdf = base64.startsWith(\"JVBER\");\n  // bytes estimados: 3/4 do length\n  const approxBytes = Math.floor(base64.length * 3 / 4);\n  const approxMB = (approxBytes / (1024*1024)).toFixed(2);\n\n  // limite t√≠pico do WhatsApp ~16 MB\n  const tooBig = approxBytes > 16 * 1024 * 1024;\n\n  const fileName = `Fatura_${String(referencia).replace(/\\W+/g,'-')}.pdf`;\n  const caption  = `üìÑ Fatura ${referencia}`;\n  const mimeType = \"application/pdf\";\n\n  // montagem de 3 payloads poss√≠veis (escolha UM nos HTTPs abaixo)\n  const payloadA = { // A) \"flat\" ‚Äî muitas inst√¢ncias usam /send-file-from-base64\n    phone, fileName, base64, caption, mimeType\n  };\n  const payloadB = { // B) objeto document\n    phone, document: { fileName, base64, mimeType }, caption\n  };\n  const payloadC = { // C) algumas exigem campo \"file\" no lugar de \"base64\"\n    phone, fileName, file: base64, caption, mimeType\n  };\n\n  return {\n    json: {\n      ok: !tooBig,\n      warn: tooBig ? `PDF ~${approxMB}MB pode ultrapassar limite do WhatsApp` : null,\n      looksPdf,\n      approxMB,\n      payloadA,\n      payloadB,\n      payloadC\n    }\n  };\n\n} catch (e) {\n  return { json: { ok: false, error: `prep_fail: ${String(e?.message || e)}` } };\n}\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[2960,2064],"id":"7ef96a62-4818-496b-aead-9b807c416512","name":"Montar PDF de fatura em aberto"},{"parameters":{"url":"={{$('Constantes').item.json.env.api.endpoints.gerarFatura}}","responseFormat":"string","options":{},"headerParametersUi":{"parameter":[{"name":"Client-Token","value":"={{ $('Constantes').item.json.env.clientTokenHeaderZapi }}"}]},"queryParametersUi":{"parameter":[{"name":"=matricula","value":"={{ $('A√ß√µes das faturas pagas').item.json.pdfRequest.matricula }}"},{"name":"referencia","value":"={{ $('A√ß√µes das faturas pagas').item.json.pdfRequest.referencia }}"}]}},"name":"Gerar fatura paga","type":"n8n-nodes-base.httpRequest","typeVersion":2,"position":[2528,2528],"id":"1694a25d-3e10-40bf-8854-82e46d653b19","alwaysOutputData":true},{"parameters":{"url":"={{$('Constantes').item.json.env.api.endpoints.gerarFatura}}","responseFormat":"string","options":{},"headerParametersUi":{"parameter":[{"name":"Client-Token","value":"={{ $('Constantes').item.json.env.clientTokenHeaderZapi }}"}]},"queryParametersUi":{"parameter":[{"name":"=matricula","value":"={{ $('Gerar Fatura ?').item.json.pdfRequest.matricula }}"},{"name":"referencia","value":"={{ $('Gerar Fatura ?').item.json.pdfRequest.referencia }}"}]}},"name":"Gerar fatura em aberto","type":"n8n-nodes-base.httpRequest","typeVersion":2,"position":[2528,1984],"id":"163f1c55-9a08-4200-b1d0-66f6ae336505","alwaysOutputData":true},{"parameters":{"requestMethod":"POST","url":"={{ $('Constantes').item.json.env.endpoints.sendText }}","options":{"splitIntoItems":false},"bodyParametersUi":{"parameter":[{"name":"phone","value":"={{ $json.phone }}"},{"name":"message","value":"=Realizando download da fatura ..."},{"name":"delayTyping","value":"10"}]},"headerParametersUi":{"parameter":[{"name":"Client-Token","value":"={{ $('Constantes').item.json.env.clientTokenHeaderZapi }}"},{"name":"Content-Type","value":"application/json"}]}},"name":"Feedback ao usu√°rio - Baixar Fatura em aberto","type":"n8n-nodes-base.httpRequest","typeVersion":2,"position":[2096,1888],"id":"7bfa9ddf-b43b-4f2e-8cd4-184c64ebdbbd","alwaysOutputData":true},{"parameters":{"requestMethod":"POST","url":"={{ $('Constantes').item.json.env.endpoints.sendText }}","options":{"splitIntoItems":false},"bodyParametersUi":{"parameter":[{"name":"phone","value":"={{ $json.phone }}"},{"name":"message","value":"=Realizando download da fatura ..."},{"name":"delayTyping","value":"10"}]},"headerParametersUi":{"parameter":[{"name":"Client-Token","value":"={{ $('Constantes').item.json.env.clientTokenHeaderZapi }}"},{"name":"Content-Type","value":"application/json"}]}},"name":"Feedback ao usu√°rio - Baixar Fatura paga","type":"n8n-nodes-base.httpRequest","typeVersion":2,"position":[2128,2496],"id":"e8a613ad-c1ec-4978-b6a9-d96ad43054c4","alwaysOutputData":true},{"parameters":{"operation":"executeQuery","query":"INSERT INTO sessions (phone, flow, step, expected_ref, data_json, expires_at,phoneconectado)\nVALUES (\n  '{{$json.session.phone}}',\n  '{{$json.session.flow}}',\n  {{$json.session.step}},\n  {{ $json.session.expectedRef ? \"'\" + $json.session.expectedRef + \"'\" : \"NULL\" }},\n  CAST('{{ JSON.stringify($json.session.data || {}) }}' AS JSON),\n  '{{$json.session.expiresAt}}','{{ $json.session.phoneconectado }}'\n)\nON DUPLICATE KEY UPDATE\n  flow         = '{{$json.session.flow}}',\n  step         = {{$json.session.step}},\n  expected_ref = {{ $json.session.expectedRef ? \"'\" + $json.session.expectedRef + \"'\" : \"NULL\" }},\n  data_json ='{{ JSON.stringify($json.session.data || {}) }}',\n  expires_at   = '{{$json.session.expiresAt}}';\n","options":{"queryReplacement":"={{$json.session.phone}}  {{$json.session.flow}}  {{$json.session.step}}  {{$json.session.expectedRef ?? null}}  {{ JSON.stringify($json.session.data ?? {}) }}  {{$json.session.expiresAt}}"}},"id":"34c8466f-67ec-41ca-957a-9a63c6cbb215","name":"Alterar Sessao 2","type":"n8n-nodes-base.mySql","typeVersion":2,"position":[7104,160],"credentials":{"mySql":{"id":"DjogxsxdXYGa9DzE","name":"InovaBot"}}},{"parameters":{"operation":"executeQuery","query":"INSERT INTO sessions (phone, flow, step, expected_ref, data_json, expires_at,phoneconectado)\nVALUES (\n  '{{$json.session.phone}}',\n  '{{$json.session.flow}}',\n  {{$json.session.step}},\n  {{ $json.session.expectedRef ? \"'\" + $json.session.expectedRef + \"'\" : \"NULL\" }},\n  CAST('{{ JSON.stringify($json.session.data || {}) }}' AS JSON),\n  '{{$json.session.expiresAt}}','{{ $json.session.phoneconectado }}'\n)\nON DUPLICATE KEY UPDATE\n  flow         = '{{$json.session.flow}}',\n  step         = {{$json.session.step}},\n  expected_ref = {{ $json.session.expectedRef ? \"'\" + $json.session.expectedRef + \"'\" : \"NULL\" }},\n  data_json ='{{ JSON.stringify($json.session.data || {}) }}',\n  expires_at   = '{{$json.session.expiresAt}}';\n","options":{"queryReplacement":"={{$json.session.phone}}  {{$json.session.flow}}  {{$json.session.step}}  {{$json.session.expectedRef ?? null}}  {{ JSON.stringify($json.session.data ?? {}) }}  {{$json.session.expiresAt}}"}},"id":"2c628712-1492-47c5-9a17-6fc02dd65c1f","name":"Alterar Sess√£o 3","type":"n8n-nodes-base.mySql","typeVersion":2,"position":[2928,240],"credentials":{"mySql":{"id":"DjogxsxdXYGa9DzE","name":"InovaBot"}}},{"parameters":{"mode":"runOnceForEachItem","jsCode":"const item = $input.item;\nconst j = item.json;\n\n// messageId da Z-API\nconst mid =\n  j.messageId ??\n  j.data?.messageId ??\n  j.response?.messageId ??\n  j.result?.messageId ??\n  j.id ??\n  null;\n\nconst snapSess = j._snapList?.session || {};\nconst currSess = j.session || {};\nconst merged = {\n  phone: currSess.phone ?? j._snapList?.phone ?? snapSess.phone ?? j.phone ?? null,\n  phoneconectado: currSess.phoneconectado ?? j._snapList?.phoneconectado ?? snapSess.phoneconectado ?? j.phoneconectado ?? null,\n  flow: currSess.flow ?? snapSess.flow ?? \"menu\",\n  step: currSess.step ?? snapSess.step ?? 0,\n  data:\n    currSess.data && Object.keys(currSess.data).length\n      ? currSess.data\n      : snapSess.data || {},\n  expiresAt:\n    currSess.expiresAt ??\n    snapSess.expiresAt ??\n    new Date(Date.now() + 15 * 60000).toISOString(),\n  expectedRef: currSess.expectedRef ?? null,\n};\n\nif (mid) merged.expectedRef = mid;\n\n// normaliza chavedigital: se veio na raiz, coloca dentro de data\nif (j.chavedigital != null && String(j.chavedigital).trim() !== \"\") {\n  merged.data = { ...merged.data, chavedigital: j.chavedigital };\n}\n\n// regra: se step=3 e h√° chavedigital, volta para 2\nconst hasChave =\n  merged.data?.chavedigital != null &&\n  String(merged.data.chavedigital).trim() !== \"\";\n\nif (merged.step === 3 && hasChave && $('Router').item.json.session.needValidateLigacao == true) {\n  merged.step = 2;\n}\n\nj.session = merged;\nj.phone = merged.phone;\n\nreturn item;\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[2688,464],"id":"0a773b64-9e72-4b90-98f9-c5bd0110ea95","name":"Repassar sess√£o"},{"parameters":{"mode":"runOnceForEachItem","jsCode":"const item = $input.item;\nconst j = item.json;\n\n// messageId da Z-API\nconst mid =\n  j.messageId ??\n  j.data?.messageId ??\n  j.response?.messageId ??\n  j.result?.messageId ??\n  j.id ??\n  null;\n\nconst snapSess = j._snapList?.session || {};\nconst currSess = j.session || {};\nconst merged = {\n  phone: currSess.phone ?? j._snapList?.phone ?? snapSess.phone ?? j.phone ?? null,\n  phoneconectado: currSess.phoneconectado ?? j._snapList?.phoneconectado ?? snapSess.phoneconectado ?? j.phoneconectado ?? null,\n  flow: currSess.flow ?? snapSess.flow ?? \"menu\",\n  step: currSess.step ?? snapSess.step ?? 0,\n  data:\n    currSess.data && Object.keys(currSess.data).length\n      ? currSess.data\n      : snapSess.data || {},\n  expiresAt:\n    currSess.expiresAt ??\n    snapSess.expiresAt ??\n    new Date(Date.now() + 15 * 60000).toISOString(),\n  expectedRef: currSess.expectedRef ?? null,\n};\n\nif (mid) merged.expectedRef = mid;\n\n// normaliza chavedigital: se veio na raiz, coloca dentro de data\nif (j.chavedigital != null && String(j.chavedigital).trim() !== \"\") {\n  merged.data = { ...merged.data, chavedigital: j.chavedigital };\n}\n\n// regra: se step=3 e h√° chavedigital, volta para 2\nconst hasChave =\n  merged.data?.chavedigital != null &&\n  String(merged.data.chavedigital).trim() !== \"\";\n\nif (merged.step === 3 && hasChave && $('Router').item.json.session.needValidateLigacao == true) {\n  merged.step = 2;\n}\n\nj.session = merged;\nj.phone = merged.phone;\n\nreturn item;\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[6848,144],"id":"e10552c6-45e7-41f4-8402-5208303e46f2","name":"Repassar sess√£o 2"},{"parameters":{"mode":"runOnceForEachItem","jsCode":"const DadosGravacao = {\n  ligacao: $(\"Router\").first().json.session.data.codigoLigacao ?? \"\",\n  phone: $(\"Router\").first().json.session.phone ?? \"\",\n  phoneConectado: $(\"Router\").first().json.session.phoneconectado ?? \"\",\n  observacao: \"\",\n  dataHora: new Date().toISOString(),\n  servico : 7\n};\n\nreturn DadosGravacao;\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[4208,2528],"id":"24ad1791-075c-4b8f-82e0-65dce105f684","name":"Gravar - Segunda via - Paga"},{"parameters":{"mode":"runOnceForEachItem","jsCode":"const DadosGravacao = {\n  ligacao: $(\"Router\").first().json.session.data.codigoLigacao ?? \"\",\n  phone: $(\"Router\").first().json.session.phone ?? \"\",\n  phoneConectado: $(\"Router\").first().json.session.phoneconectado ?? \"\",\n  observacao: \"\",\n  dataHora: new Date().toISOString(),\n  servico : 1\n};\n\nreturn DadosGravacao;\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[4224,2064],"id":"35a20cf1-a962-4fe4-81e2-a3551a074361","name":"Gravar - Segunda Via - em aberto"},{"parameters":{"requestMethod":"POST","url":"={{$('Constantes').item.json.env.api.endpoints.auditoria}}","options":{"bodyContentCustomMimeType":"","splitIntoItems":false},"bodyParametersUi":{"parameter":[{"name":"celularChatbot","value":"={{ $json.phoneConectado }}"},{"name":"celularUsuario","value":"={{ $json.phone }}"},{"name":"rotina","value":"={{ $json.servico }}"},{"name":"ligacaoId","value":"={{ $json.ligacao }}"},{"name":"observacao","value":"={{ $json.observacao }}"}]}},"name":"Gravar Auditoria","type":"n8n-nodes-base.httpRequest","typeVersion":2,"position":[5536,512],"id":"63f7ee00-3669-4931-a769-b3be215350b1","alwaysOutputData":true},{"parameters":{"mode":"runOnceForEachItem","jsCode":"const item = $input.item;\nconst j = item.json;\n\nconst snapSess = j._snapList?.session || {};\nconst currSess = j.session || {};\n\nconst merged = {\n  phone: currSess.phone ?? j._snapList?.phone ?? snapSess.phone ?? j.phone ?? null,\n  phoneconectado: currSess.phoneconectado ?? j._snapList?.phoneconectado ?? snapSess.phoneconectado ?? j.phoneconectado ?? null,\n  flow: \"ident\",\n  step: 2,\n  data:\n    currSess.data && Object.keys(currSess.data).length\n      ? currSess.data\n      : snapSess.data || {},\n  expiresAt:\n    currSess.expiresAt ??\n    snapSess.expiresAt ??\n    new Date(Date.now() + 15 * 60000).toISOString(),\n  expectedRef: currSess.expectedRef ?? null,\n};\n\nj.session = merged;\n\nj.session.data.authOk = false;\nj.session.data.codigoLigacao = null;\nj.session.reply = `Prazer em falar com voc√™,*` + currSess.data.nome + `!* üëã\\nPor favor, me informe o *c√≥digo da liga√ß√£o* (apenas os n√∫meros, sem o d√≠gito).\\n\\nSe quiser encerrar o atendimento, basta digitar *Sair* a qualquer momento.`;\n\n\nj.phone = merged.phone;\n\nreturn item;\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[3648,304],"id":"14289085-bb99-47c1-b03b-6ff6dbb90548","name":"Montar sess√£o para trocar liga√ß√£o"},{"parameters":{"operation":"executeQuery","query":"INSERT INTO sessions (phone, flow, step, expected_ref, data_json, expires_at,phoneconectado)\nVALUES (\n  '{{$json.session.phone}}',\n  '{{$json.session.flow}}',\n  {{$json.session.step}},\n  {{ $json.session.expectedRef ? \"'\" + $json.session.expectedRef + \"'\" : \"NULL\" }},\n  CAST('{{ JSON.stringify($json.session.data || {}) }}' AS JSON),\n  '{{$json.session.expiresAt}}','{{ $json.session.phoneconectado }}'\n)\nON DUPLICATE KEY UPDATE\n  flow         = '{{$json.session.flow}}',\n  step         = {{$json.session.step}},\n  expected_ref = {{ $json.session.expectedRef ? \"'\" + $json.session.expectedRef + \"'\" : \"NULL\" }},\n  data_json ='{{ JSON.stringify($json.session.data || {}) }}',\n  expires_at   = '{{$json.session.expiresAt}}';\n","options":{"queryReplacement":"={{$json.session.phone}}  {{$json.session.flow}}  {{$json.session.step}}  {{$json.session.expectedRef ?? null}}  {{ JSON.stringify($json.session.data ?? {}) }}  {{$json.session.expiresAt}}"}},"id":"bf494980-f66c-41af-b730-c09d2fca873e","name":"Alterar sess√£o para trocar liga√ß√£o","type":"n8n-nodes-base.mySql","typeVersion":2,"position":[3872,304],"credentials":{"mySql":{"id":"DjogxsxdXYGa9DzE","name":"InovaBot"}}},{"parameters":{"requestMethod":"POST","url":"={{ $('Constantes').item.json.env.endpoints.sendText }}","options":{"splitIntoItems":false},"bodyParametersUi":{"parameter":[{"name":"phone","value":"={{ $('Montar sess√£o para trocar liga√ß√£o').item.json.phone }}"},{"name":"message","value":"={{ $('Montar sess√£o para trocar liga√ß√£o').item.json.session.reply }}"},{"name":"delayTyping","value":"6"},{"name":"delayMessage","value":"2"}]},"headerParametersUi":{"parameter":[{"name":"Client-Token","value":"={{ $('Constantes').item.json.env.clientTokenHeaderZapi }}"},{"name":"Content-Type","value":"application/json"}]}},"name":"Solicitar o novo c√≥digo de liga√ß√£o","type":"n8n-nodes-base.httpRequest","typeVersion":2,"position":[4064,304],"id":"85bc0fa3-1f62-4036-bae6-fddd488399b0","alwaysOutputData":true},{"parameters":{"requestMethod":"POST","url":"={{ $('Constantes').item.json.env.endpoints.sendDocument }}","options":{"bodyContentCustomMimeType":"","splitIntoItems":false},"bodyParametersUi":{"parameter":[{"name":"phone","value":"={{ $json.payloadA.phone }}"},{"name":"document","value":"={{ 'data:application/pdf;base64,' + $json.payloadA.base64 }}"},{"name":"fileName","value":"={{ $json.payloadA.fileName }}"},{"name":"caption","value":"={{ $json.payloadA.caption }}"}]},"headerParametersUi":{"parameter":[{"name":"Client-Token","value":"={{ $('Constantes').item.json.env.clientTokenHeaderZapi }}"},{"name":"Content-Type","value":"application/json"}]}},"name":"Apresentar PDF fatura aberta","type":"n8n-nodes-base.httpRequest","typeVersion":2,"position":[3536,2096],"id":"afc6cbe7-69e9-4833-b887-c58f6d7177b5","alwaysOutputData":true},{"parameters":{"requestMethod":"POST","url":"={{ $('Constantes').item.json.env.endpoints.sendDocument }}","options":{"bodyContentCustomMimeType":"","splitIntoItems":false},"bodyParametersUi":{"parameter":[{"name":"phone","value":"={{ $json.payloadA.phone }}"},{"name":"document","value":"={{ 'data:application/pdf;base64,' + $json.payloadA.base64 }}"},{"name":"fileName","value":"={{ $json.payloadA.fileName }}"},{"name":"caption","value":"={{ $json.payloadA.caption }}"}]},"headerParametersUi":{"parameter":[{"name":"Client-Token","value":"={{ $('Constantes').item.json.env.clientTokenHeaderZapi }}"},{"name":"Content-Type","value":"application/json"}]}},"name":"Apresentar PDF fatura paga","type":"n8n-nodes-base.httpRequest","typeVersion":2,"position":[3536,2544],"id":"48065e3f-5dab-4a4b-aeae-b1af1ef1ec88","alwaysOutputData":true},{"parameters":{"dataType":"string","value1":"={{ $node[\"Receber mensagem\"].json.body.listResponseMessage?.title \n   || $node[\"Receber mensagem\"].json.body.listResponse?.title }}","rules":{"rules":[{"operation":"contains","value2":"Faturas em aberto","output":1},{"operation":"contains","value2":"Faturas pagas","output":2},{"operation":"contains","value2":"Hist√≥rico de consumo","output":3}]},"fallbackOutput":0},"name":"Resposta lista","type":"n8n-nodes-base.switch","typeVersion":1,"position":[3008,656],"id":"50cb4881-b5b2-485f-b568-a61fa985c795"},{"parameters":{"dataType":"string","value1":"={{ $node[\"Receber mensagem\"].json.body.listResponseMessage?.title \n   || $node[\"Receber mensagem\"].json.body.listResponse?.title }}","rules":{"rules":[{"operation":"contains","value2":"Den√∫ncia","output":3},{"operation":"contains","value2":"Localiza√ß√£o","output":1},{"operation":"contains","value2":"Trocar liga√ß√£o","output":2}]},"fallbackOutput":0},"name":"Resposta lista 2","type":"n8n-nodes-base.switch","typeVersion":1,"position":[3328,256],"id":"d73fda00-d251-472c-9e37-0dbbb7bdbb55"},{"parameters":{"dataType":"string","value1":"={{ $node[\"Receber mensagem\"].json.body.listResponseMessage?.title \n   || $node[\"Receber mensagem\"].json.body.listResponse?.title }}","rules":{"rules":[{"operation":"contains","value2":"Falar com Atendente"},{"operation":"contains","value2":"Sair","output":1}]}},"name":"Resposta lista 3","type":"n8n-nodes-base.switch","typeVersion":1,"position":[3648,-128],"id":"f03058bd-fbe8-46f4-99b1-cec19d3206dc"},{"parameters":{"requestMethod":"POST","url":"={{ $('Constantes').item.json.env.endpoints.sendText }}","options":{"splitIntoItems":false},"bodyParametersUi":{"parameter":[{"name":"phone","value":"={{ $('Resposta lista 3').item.json.phone }}"},{"name":"message","value":"={{\n\"Perfeito! üë®üèª‚Äçüíª\\nEstou transferindo sua conversa para um de nossos atendentes humanos.\\n\\nAntes de prosseguir, confirmo seus dados:\\nüë§ Nome: *\" \n+ $('Resposta lista 3').item.json.session.data.nome \n+ \"*\\nüìù C√≥digo da liga√ß√£o: *\" \n+ $('Resposta lista 3').item.json.session.data.codigoLigacao \n+ \"*\\n\\nPor favor, detalhe *qual √© o problema ou d√∫vida* para que possamos agilizar seu atendimento.\\n\\nSe desejar voltar ao atendimento automatizado com o *BILL*, basta digitar *BILL* a qualquer momento.\"\n}}\n"},{"name":"delayTyping","value":"2"},{"name":"delayMessage","value":"2"}]},"headerParametersUi":{"parameter":[{"name":"Client-Token","value":"={{ $('Constantes').item.json.env.clientTokenHeaderZapi }}"},{"name":"Content-Type","value":"application/json"}]}},"name":"Mensagem de repasse ao Atendente Humano","type":"n8n-nodes-base.httpRequest","typeVersion":2,"position":[4496,-272],"id":"179b01df-63da-4a41-a144-18e22bfa35e5","alwaysOutputData":true},{"parameters":{"mode":"runOnceForEachItem","jsCode":"const item = $input.item;\nconst j = item.json;\n\nconst snapSess = j._snapList?.session || {};\nconst currSess = j.session || {};\n\nconst merged = {\n  phone: $('Resposta lista 3').item.json.phone,\n  phoneconectado: $('Resposta lista 3').item.json.phoneconectado,\n  flow: \"humano\",\n  step: 1,\n  data:\n    currSess.data && Object.keys(currSess.data).length\n      ? currSess.data\n      : snapSess.data || {},\n  expiresAt:\n    currSess.expiresAt ??\n    snapSess.expiresAt ??\n    new Date(Date.now() + 120 * 60000).toISOString(),\n  expectedRef: currSess.expectedRef ?? null,\n};\n\nj.session = merged;\n\nj.session.data.authOk = true;\nj.session.data.codigoLigacao = $('Resposta lista 3').item.json.data_json.codigoLigacao;\nj.session.data.nome = $('Resposta lista 3').item.json.data_json.nome;\nj.session.data.chavedigital = $('Resposta lista 3').item.json.data_json.chavedigital;\nj.session.reply = ``;\n\n\nj.phone = merged.phone;\n\nreturn item;\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[4848,-160],"id":"615748a1-4110-4f8d-ad41-91fe35b13023","name":"Montar sess√£o para Atendimento Humano"},{"parameters":{"operation":"executeQuery","query":"INSERT INTO sessions (phone, flow, step, expected_ref, data_json, expires_at,phoneconectado)\nVALUES (\n  '{{$json.session.phone}}',\n  '{{$json.session.flow}}',\n  {{$json.session.step}},\n  {{ $json.session.expectedRef ? \"'\" + $json.session.expectedRef + \"'\" : \"NULL\" }},\n  CAST('{{ JSON.stringify($json.session.data || {}) }}' AS JSON),\n  '{{$json.session.expiresAt}}','{{ $json.session.phoneconectado }}'\n)\nON DUPLICATE KEY UPDATE\n  flow         = '{{$json.session.flow}}',\n  step         = {{$json.session.step}},\n  expected_ref = {{ $json.session.expectedRef ? \"'\" + $json.session.expectedRef + \"'\" : \"NULL\" }},\n  data_json ='{{ JSON.stringify($json.session.data || {}) }}',\n  expires_at   = '{{$json.session.expiresAt}}';\n","options":{"queryReplacement":"={{$json.session.phone}}  {{$json.session.flow}}  {{$json.session.step}}  {{$json.session.expectedRef ?? null}}  {{ JSON.stringify($json.session.data ?? {}) }}  {{$json.session.expiresAt}}"}},"id":"07324a64-1fd7-4673-bd53-d5e5b4436ec1","name":"Alterar sess√£o para atendimento Humano","type":"n8n-nodes-base.mySql","typeVersion":2,"position":[5088,-160],"credentials":{"mySql":{"id":"DjogxsxdXYGa9DzE","name":"InovaBot"}}},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"f6a291f2-ed97-4d5e-84e5-34c26d3c4732","leftValue":"={{ String($json.flow || '').toLowerCase() }}","rightValue":"humano","operator":{"type":"string","operation":"equals"}},{"id":"1e7c390c-8aa0-4323-9201-d13107f5b4fc","leftValue":"={{ $('Receber mensagem').item.json.body.text.message.toLowerCase() }}","rightValue":"sair","operator":{"type":"string","operation":"notEquals"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[704,-208],"id":"863dd629-0e06-48bf-872c-1c2d07a46bde","name":"Sess√£o de atendimento humano ?"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"f6a291f2-ed97-4d5e-84e5-34c26d3c4732","leftValue":"={{ $json.body.fromMe }}","rightValue":"","operator":{"type":"boolean","operation":"true","singleValue":true}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[2240,-208],"id":"737ef7e2-b99b-4448-ab7f-ccea81a09ce3","name":"Mensagem do bot ?"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"loose","version":2},"conditions":[{"id":"f6a291f2-ed97-4d5e-84e5-34c26d3c4732","leftValue":"={{ $json.dentroDoHorario }}","rightValue":"","operator":{"type":"boolean","operation":"true","singleValue":true}}],"combinator":"and"},"looseTypeValidation":true,"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[4176,-144],"id":"1d8cafd6-2dc6-463b-9498-c63dcc4bfbbc","name":"Hor√°rio dentro do expediente humano ?"},{"parameters":{"jsCode":"// Recupera as configura√ß√µes vindas do n√≥ \"Constantes\"\nconst cfg = $('Constantes').item.json.env.api.configuracao || {};\n\n// L√™ os hor√°rios de in√≠cio e fim em string (\"HH:mm\")\nconst iniStr = String(cfg.HorarioAtendimentoHumanoInicio || '').trim();\nconst fimStr = String(cfg.HorarioAtendimentoHumanoFim || '').trim();\n\n// Retorno padr√£o (fora do hor√°rio)\nlet dentroDoHorario = false;\n\nif (/^\\d{2}:\\d{2}$/.test(iniStr) && /^\\d{2}:\\d{2}$/.test(fimStr)) {\n  const [hI, mI] = iniStr.split(':').map(Number);\n  const [hF, mF] = fimStr.split(':').map(Number);\n\n  // Hora atual de Bras√≠lia\n  const agoraBR = new Date(new Date().toLocaleString('en-US', { timeZone: 'America/Sao_Paulo' }));\n  const minutosAgora = agoraBR.getHours() * 60 + agoraBR.getMinutes();\n\n  const ini = hI * 60 + mI;\n  const fim = hF * 60 + mF;\n\n  if (ini <= fim) {\n    // Janela normal (mesmo dia)\n    dentroDoHorario = minutosAgora >= ini && minutosAgora < fim;\n  } else {\n    // Janela que cruza a meia-noite (ex: 22:00‚Äì06:00)\n    dentroDoHorario = minutosAgora >= ini || minutosAgora < fim;\n  }\n}\n\nreturn [{\n  json: {\n    dentroDoHorario: Boolean(dentroDoHorario)\n  }\n}];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[3936,-144],"id":"d3b6172a-de41-4fdf-b284-91c80101e6c8","name":"Consistir hor√°rio de atendimento humano"},{"parameters":{"requestMethod":"POST","url":"={{ $('Constantes').item.json.env.endpoints.sendText }}","options":{"splitIntoItems":false},"bodyParametersUi":{"parameter":[{"name":"phone","value":"={{ $('Resposta lista 3').item.json.phone }}"},{"name":"message","value":"={{\n\"Ol√°! üëãüèª\\nNosso hor√°rio de atendimento humano j√° foi encerrado por hoje.\\n\\n‚è∞ Hor√°rio de atendimento: *segunda a sexta, das \" + $('Constantes').item.json.env.api.configuracao.HorarioAtendimentoHumanoInicio + \"* √†s *\" +\n$('Constantes').item.json.env.api.configuracao.HorarioAtendimentoHumanoFim + \"*.\\n\\nAgradecemos pela compreens√£o.\\n\\nSe desejar voltar ao atendimento automatizado com o *BILL*, basta digitar *BILL*.\\n\\nSe desejar encerrar o atendimento digite *sair*.\"\n}}\n"},{"name":"delayTyping","value":"2"},{"name":"delayMessage","value":"2"}]},"headerParametersUi":{"parameter":[{"name":"Client-Token","value":"={{ $('Constantes').item.json.env.clientTokenHeaderZapi }}"},{"name":"Content-Type","value":"application/json"}]}},"name":"Mensagem de repasse ao Atendente fora do hor√°rio","type":"n8n-nodes-base.httpRequest","typeVersion":2,"position":[4496,-64],"id":"6d05da11-be47-42c5-93fe-cbfa3481d024","alwaysOutputData":true},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"c796eaa6-5ecd-4b17-a672-56a59c82d61b","leftValue":"={{ $('Receber mensagem').item.json.body.text.message.toLowerCase() }}","rightValue":"bill","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[1056,-384],"id":"7f38528d-28b6-4eb6-a048-7437790e5083","name":"Verificar se fluxo ir√° voltar para o BILL"},{"parameters":{"values":{"string":[{"name":"_session","value":"={{$json}}"}]},"options":{}},"id":"db53914f-ea98-4f78-9746-2eea0c432d58","name":"Setar sess√£o","type":"n8n-nodes-base.set","typeVersion":2,"position":[432,-208]}],"connections":{"Monta lista recursos":{"main":[[{"node":"Imprimir Lista","type":"main","index":0}]]},"Monta lista":{"main":[[{"node":"Envia lista Op√ß√µes","type":"main","index":0}]]},"Get Payload":{"main":[[{"node":"Router","type":"main","index":0}]]},"Apresentar Faturas em Aberto":{"main":[[{"node":"N√£o h√° faturas em aberto ?","type":"main","index":0}]]},"Validar LIga√ß√£o":{"main":[[{"node":"Passar Session","type":"main","index":1}],[{"node":"Passar Session","type":"main","index":1}]]},"Hist√≥rico de consumo":{"main":[[{"node":"Formatar hist√≥rico de consumo","type":"main","index":0}]]},"Formatar hist√≥rico de consumo":{"main":[[{"node":"Apresentar historico","type":"main","index":0}]]},"Enviar Confirma√ß√£o":{"main":[[{"node":"Gravar - Ouvidoria","type":"main","index":0}]]},"Processa Ouvidoria ?":{"main":[[{"node":"Gravar ouvidoria","type":"main","index":0}],[{"node":"Mensagem Individual","type":"main","index":0}]]},"Recriar session":{"main":[[{"node":"Repassar sess√£o 2","type":"main","index":0}]]},"Merge":{"main":[[{"node":"Recriar session","type":"main","index":0}]]},"Snapshot Sess√£o (Confirm)":{"main":[[{"node":"Merge","type":"main","index":0}]]},"Mensagem Encerramento":{"main":[[{"node":"Deletar sess√£o","type":"main","index":0}]]},"Encerrar Atendimento ?":{"main":[[{"node":"Mensagem Encerramento","type":"main","index":0}],[{"node":"Snapshot Sess√£o Texto","type":"main","index":0},{"node":"Precisa Validar Liga√ß√£o ?","type":"main","index":0}]]},"Abrir Menu ?":{"main":[[{"node":"Monta lista recursos","type":"main","index":0}],[{"node":"Enviar Pergunta","type":"main","index":0}]]},"Encerramento/Voltar":{"main":[[{"node":"Snapshot Sess√£o (Confirm)","type":"main","index":0},{"node":"Mensagem final","type":"main","index":0}]]},"Resposta vem de Lista":{"main":[[{"node":"Resposta lista","type":"main","index":0}],[{"node":"Monta lista","type":"main","index":0}]]},"Imprimir Lista":{"main":[[{"node":"Merge Lista + Sess√£o","type":"main","index":0}]]},"Snapshot Sess√£o Lista":{"main":[[{"node":"Abrir Menu ?","type":"main","index":0},{"node":"Merge Lista + Sess√£o","type":"main","index":1}]]},"Snapshot Sess√£o Texto":{"main":[[{"node":"Merge Texto + Sess√£o","type":"main","index":0}]]},"Merge Texto + Sess√£o":{"main":[[{"node":"Repassar sess√£o","type":"main","index":0}]]},"Merge Lista + Sess√£o":{"main":[[{"node":"Repassar sess√£o","type":"main","index":0}]]},"Apresentar historico":{"main":[[{"node":"Gravar - Hist√≥rico de Consumo","type":"main","index":0}]]},"Passar Session":{"main":[[{"node":"Processa Valida√ß√£o","type":"main","index":0}]]},"Autenticado ?":{"main":[[{"node":"√â clique de faturas em aberto","type":"main","index":0}],[{"node":"No Operation, do nothing3","type":"main","index":0}]]},"Router":{"main":[[{"node":"Encerrar Atendimento ?","type":"main","index":0}]]},"Setar Codigo":{"main":[[{"node":"Passar Session","type":"main","index":0}]]},"Precisa Validar Liga√ß√£o ?":{"main":[[{"node":"Setar Codigo","type":"main","index":0},{"node":"Feedback ao usu√°rio - Baixar Fatura1","type":"main","index":0}],[{"node":"Tem reply?","type":"main","index":0}]]},"Processa Valida√ß√£o":{"main":[[{"node":"Snapshot Sess√£o Lista","type":"main","index":0}]]},"Enviar Pergunta":{"main":[[{"node":"Merge Texto + Sess√£o","type":"main","index":1}]]},"Tem reply?":{"main":[[{"node":"Enviar Pergunta","type":"main","index":0}],[{"node":"Autenticado ?","type":"main","index":0}]]},"Select Sess√£o":{"main":[[{"node":"Setar sess√£o","type":"main","index":0}]]},"Mensagem final":{"main":[[{"node":"Merge","type":"main","index":1}]]},"Constantes":{"main":[[{"node":"Select Sess√£o","type":"main","index":0}]]},"Envia Localiza√ß√£o":{"main":[[{"node":"Gravar - Localiza√ß√£o","type":"main","index":0}]]},"Receber mensagem":{"main":[[{"node":"Normalizador de Clique","type":"main","index":0}]]},"Dados":{"main":[[{"node":"Constantes","type":"main","index":0}]]},"Mensagem enviada pelo Bot":{"main":[[{"node":"Resposta vem de Lista","type":"main","index":0}],[{"node":"No Operation, do nothing1","type":"main","index":0}]]},"Mensagem Individual":{"main":[[{"node":"Mensagem enviada pelo Bot","type":"main","index":0}],[{"node":"No Operation, do nothing","type":"main","index":0}]]},"Faturas em Aberto":{"main":[[{"node":"Preparar Lista - Faturas em Aberto","type":"main","index":0}]]},"Gerar Fatura ?":{"main":[[{"node":"Feedback ao usu√°rio - Baixar Fatura em aberto","type":"main","index":0}],[{"node":"Feedback ao usu√°rio - PIX/Barras","type":"main","index":0}]]},"Normalizador de Clique":{"main":[[{"node":"Dados","type":"main","index":0}]]},"Consultar Fatura por refer√™ncia":{"main":[[{"node":"Montar resposta Pix/Barras","type":"main","index":0}]]},"Montar resposta Pix/Barras":{"main":[[{"node":"Apresentar PIX/Barras","type":"main","index":0}]]},"Apresentar PIX/Barras":{"main":[[{"node":"Gravar - PIX ou Barras","type":"main","index":0}]]},"Feedback ao usu√°rio - Faturas em aberto":{"main":[[{"node":"Faturas em Aberto","type":"main","index":0}]]},"Feedback ao usu√°rio - PIX/Barras":{"main":[[{"node":"Consultar Fatura por refer√™ncia","type":"main","index":0}]]},"Feedback ao usu√°rio - Historico":{"main":[[{"node":"Hist√≥rico de consumo","type":"main","index":0}]]},"Feedback ao usu√°rio - Baixar Fatura1":{"main":[[{"node":"Validar LIga√ß√£o","type":"main","index":0}]]},"Gravar - Hist√≥rico de Consumo":{"main":[[{"node":"Gravar Auditoria","type":"main","index":0}]]},"Gravar - Localiza√ß√£o":{"main":[[{"node":"Gravar Auditoria","type":"main","index":0}]]},"Gravar - Ouvidoria":{"main":[[{"node":"Gravar Auditoria","type":"main","index":0}]]},"Gravar - PIX ou Barras":{"main":[[{"node":"Gravar Auditoria","type":"main","index":0}]]},"Gravar ouvidoria":{"main":[[{"node":"Enviar Confirma√ß√£o","type":"main","index":0}]]},"N√£o h√° faturas em aberto ?":{"main":[[{"node":"Encerramento/Voltar","type":"main","index":0}]]},"Feedback ao usu√°rio - Faturas pagas":{"main":[[{"node":"Faturas Pagas","type":"main","index":0}]]},"Faturas Pagas":{"main":[[{"node":"Preparar Lista - Faturas Pagas","type":"main","index":0}]]},"Preparar Lista - Faturas Pagas":{"main":[[{"node":"Apresentar Faturas pagas","type":"main","index":0}]]},"Apresentar Faturas pagas":{"main":[[{"node":"N√£o h√° faturas pagas ?","type":"main","index":0}]]},"N√£o h√° faturas pagas ?":{"main":[[{"node":"Encerramento/Voltar","type":"main","index":0}]]},"√â clique de faturas em aberto":{"main":[[{"node":"Montar lista de faturas em aberto","type":"main","index":0}],[{"node":"√â clique de faturas pagas","type":"main","index":0}]]},"Preparar Lista - Faturas em Aberto":{"main":[[{"node":"Apresentar Faturas em Aberto","type":"main","index":0}]]},"√â clique de faturas pagas":{"main":[[{"node":"Montar lista de faturas pagas","type":"main","index":0}],[{"node":"√â clique de a√ß√£o de faturas em aberto","type":"main","index":0}]]},"Montar lista de faturas pagas":{"main":[[{"node":"A√ß√µes das faturas pagas","type":"main","index":0}]]},"A√ß√µes das faturas pagas":{"main":[[{"node":"Feedback ao usu√°rio - Baixar Fatura paga","type":"main","index":0}]]},"A√ß√µes das faturas em aberto":{"main":[[{"node":"Apresentar faturas em aberto","type":"main","index":0}]]},"Montar lista de faturas em aberto":{"main":[[{"node":"A√ß√µes das faturas em aberto","type":"main","index":0}]]},"√â clique de a√ß√£o de faturas em aberto":{"main":[[{"node":"Montar op√ß√µes da fatura selecionada (Em Aberto)","type":"main","index":0}],[{"node":"Processa Ouvidoria ?","type":"main","index":0}]]},"Montar op√ß√µes da fatura selecionada (Em Aberto)":{"main":[[{"node":"Gerar Fatura ?","type":"main","index":0}]]},"Montar PDF de fatura paga":{"main":[[{"node":"Apresentar PDF fatura paga","type":"main","index":0}]]},"Montar PDF de fatura em aberto":{"main":[[{"node":"Apresentar PDF fatura aberta","type":"main","index":0}]]},"Gerar fatura paga":{"main":[[{"node":"Montar PDF de fatura paga","type":"main","index":0}]]},"Gerar fatura em aberto":{"main":[[{"node":"Montar PDF de fatura em aberto","type":"main","index":0}]]},"Feedback ao usu√°rio - Baixar Fatura em aberto":{"main":[[{"node":"Gerar fatura em aberto","type":"main","index":0}]]},"Feedback ao usu√°rio - Baixar Fatura paga":{"main":[[{"node":"Gerar fatura paga","type":"main","index":0}]]},"Repassar sess√£o":{"main":[[{"node":"Alterar Sess√£o 3","type":"main","index":0}]]},"Repassar sess√£o 2":{"main":[[{"node":"Alterar Sessao 2","type":"main","index":0}]]},"Gravar - Segunda via - Paga":{"main":[[{"node":"Gravar Auditoria","type":"main","index":0}]]},"Gravar - Segunda Via - em aberto":{"main":[[{"node":"Gravar Auditoria","type":"main","index":0}]]},"Gravar Auditoria":{"main":[[{"node":"Encerramento/Voltar","type":"main","index":0}]]},"Montar sess√£o para trocar liga√ß√£o":{"main":[[{"node":"Alterar sess√£o para trocar liga√ß√£o","type":"main","index":0}]]},"Alterar sess√£o para trocar liga√ß√£o":{"main":[[{"node":"Solicitar o novo c√≥digo de liga√ß√£o","type":"main","index":0}]]},"Apresentar PDF fatura aberta":{"main":[[{"node":"Gravar - Segunda Via - em aberto","type":"main","index":0}]]},"Apresentar PDF fatura paga":{"main":[[{"node":"Gravar - Segunda via - Paga","type":"main","index":0}]]},"Resposta lista":{"main":[[{"node":"Resposta lista 2","type":"main","index":0}],[{"node":"Feedback ao usu√°rio - Faturas em aberto","type":"main","index":0}],[{"node":"Feedback ao usu√°rio - Faturas pagas","type":"main","index":0}],[{"node":"Feedback ao usu√°rio - Historico","type":"main","index":0}]]},"Resposta lista 2":{"main":[[{"node":"Resposta lista 3","type":"main","index":0}],[{"node":"Envia Localiza√ß√£o","type":"main","index":0}],[{"node":"Montar sess√£o para trocar liga√ß√£o","type":"main","index":0}],[]]},"Resposta lista 3":{"main":[[{"node":"Consistir hor√°rio de atendimento humano","type":"main","index":0}]]},"Mensagem de repasse ao Atendente Humano":{"main":[[{"node":"Montar sess√£o para Atendimento Humano","type":"main","index":0}]]},"Montar sess√£o para Atendimento Humano":{"main":[[{"node":"Alterar sess√£o para atendimento Humano","type":"main","index":0}]]},"Sess√£o de atendimento humano ?":{"main":[[{"node":"Verificar se fluxo ir√° voltar para o BILL","type":"main","index":0}],[{"node":"Mensagem do bot ?","type":"main","index":0}]]},"Mensagem do bot ?":{"main":[[],[{"node":"Get Payload","type":"main","index":0}]]},"Consistir hor√°rio de atendimento humano":{"main":[[{"node":"Hor√°rio dentro do expediente humano ?","type":"main","index":0}]]},"Hor√°rio dentro do expediente humano ?":{"main":[[{"node":"Mensagem de repasse ao Atendente Humano","type":"main","index":0}],[{"node":"Mensagem de repasse ao Atendente fora do hor√°rio","type":"main","index":0}]]},"Verificar se fluxo ir√° voltar para o BILL":{"main":[[{"node":"Mensagem do bot ?","type":"main","index":0}]]},"Setar sess√£o":{"main":[[{"node":"Sess√£o de atendimento humano ?","type":"main","index":0}]]},"Mensagem de repasse ao Atendente fora do hor√°rio":{"main":[[{"node":"Montar sess√£o para Atendimento Humano","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"07ceeea8-4ea5-4dd7-8b17-484d4f466dd7","triggerCount":1,"shared":[{"createdAt":"2025-09-10T17:02:15.339Z","updatedAt":"2025-09-10T17:02:15.339Z","role":"workflow:owner","workflowId":"NAOMNYB6mWnKgBrk","projectId":"bDUBly1zU3yziLIn"}],"tags":[]}