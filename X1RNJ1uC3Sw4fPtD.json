{"createdAt":"2025-10-20T12:45:06.062Z","updatedAt":"2025-10-29T17:42:10.000Z","id":"X1RNJ1uC3Sw4fPtD","name":"Datamobil - Reader Embedded - Produ√ß√£o","active":true,"isArchived":false,"nodes":[{"parameters":{"operation":"download","fileId":{"__rl":true,"value":"1QQSmwbXjo0-jTDq2a0_TrhvPruhROeON","mode":"list","cachedResultName":"ReaderWeb.json","cachedResultUrl":"https://drive.google.com/file/d/1QQSmwbXjo0-jTDq2a0_TrhvPruhROeON/view?usp=drivesdk"},"options":{"binaryPropertyName":"json"}},"type":"n8n-nodes-base.googleDrive","typeVersion":3,"position":[48,432],"id":"aea01f86-ebfb-4527-9b61-10fce15567b4","name":"Download file","credentials":{"googleDriveOAuth2Api":{"id":"A7dItjE7OWcTVPSQ","name":"Google Drive account"}}},{"parameters":{"conditions":{"options":{"version":2,"leftValue":"","caseSensitive":true,"typeValidation":"strict"},"conditions":[{"id":"5f3b3c30-78e9-4ed0-b520-9153664540ec","leftValue":"={{ $json.query }}","rightValue":"SELECT","operator":{"type":"string","operation":"contains"}}],"combinator":"and"},"options":{}},"id":"76924932-48d3-4519-9077-acc8e7d5332f","name":"Check if query exists","type":"n8n-nodes-base.if","position":[1136,448],"typeVersion":2.2},{"parameters":{"assignments":{"assignments":[{"id":"ebbe194a-4b8b-44c9-ac19-03cf69d353bf","name":"query","type":"string","value":"={{ ($json.output) }}"}]},"includeOtherFields":true,"options":{}},"id":"68c1c7d8-05cd-49a2-af6d-e6dd3772b559","name":"Extract SQL query","type":"n8n-nodes-base.set","position":[976,448],"typeVersion":3.4},{"parameters":{"assignments":{"assignments":[{"id":"42abd24e-419a-47d6-bc8b-7146dd0b8314","name":"sessionId","type":"string","value":"={{ $('Entrada').item.json.query.CNPJ }}"},{"id":"f78c57d9-df13-43c7-89a7-5387e528107e","name":"chatinput","type":"string","value":"={{ $('Entrada').item.json.query.Solicitacao }}"},{"id":"e42b39eb-dfbd-48d9-94ed-d658bdd41454","name":"schema","type":"string","value":"={{ $json.json }}"}]},"options":{}},"id":"c98eeca6-bfc7-47a3-8286-510c5afc93e5","name":"Combine schema data and chat input","type":"n8n-nodes-base.set","position":[448,432],"executeOnce":true,"typeVersion":3.4},{"parameters":{"agent":"conversationalAgent","promptType":"define","text":"=Here is the database schema: {{ $json.schema }}\nHere is the user request: {{ $json.chatinput }}","options":{"humanMessage":"TOOLS\n------\nAssistant can ask the user to use tools to look up information that may be helpful in answering the users original question. The tools the human can use are:\n\n{tools}\n\n{format_instructions}\n\nUSER'S INPUT\n--------------------\nHere is the user's input (remember to respond with a markdown code snippet of a json blob with a single action, and NOTHING else):\n\n{{input}}","systemMessage":"=Voc√™ √© um gerador de SQL para MySQL 8.0+, guiado por um JSON chamado SCHEMA.\nSeu objetivo √© gerar apenas consultas SELECT 100% v√°lidas e coerentes com o SCHEMA.\nNunca produza instru√ß√µes que criem, alterem, excluam ou modifiquem dados.\n\n‚öôÔ∏è CONFIGURA√á√ïES DE DIALETO E FORMATA√á√ÉO\n\nDialeto: MySQL 8.0+\n\nIdentificadores (tabelas e colunas): sempre entre crases ‚Üí `...`\n\nStrings: entre aspas simples ‚Üí 'texto'\n\nProibido:\n\nAspas duplas (\"...\")\n\nPrefixos de schema (ex.: public.)\n\nPonto e v√≠rgula (;) ao final da query\n\nCase: respeitar exatamente o case do SCHEMA\n\nSeparador decimal: ponto .\n\nPalavras reservadas s√≥ podem ser usadas se estiverem entre crases.\n\n\nüîí POL√çTICA DE SEGURAN√áA\nSomente SELECT √© permitido.\nN√£o posso criar, alterar, inserir ou deletar.\nReescreva seu pedido como um SELECT.\n\nComandos proibidos:\nINSERT, UPDATE, DELETE, MERGE, CREATE, ALTER, DROP, TRUNCATE,\nGRANT, REVOKE, COMMENT, VACUUM, COPY, REFRESH, CALL, DO, BEGIN,\nCOMMIT, ROLLBACK, SET, LOCK, CLUSTER, REINDEX, DISCARD.\n\n\nSe o usu√°rio pedir algo que envolva qualquer comando acima, responda somente com:\n\n‚ùå Somente SELECT √© permitido. N√£o posso criar, alterar, inserir ou deletar. Reescreva seu pedido como um SELECT.\n\n\n\nüß© REGRAS DE USO DO SCHEMA\n\nS√≥ use colunas e tabelas que existem no SCHEMA JSON.\n\nRespeite os tipos, nomes e cases definidos.\n\nSe o campo solicitado n√£o existir, responda:\n\n‚ùå N√£o √© poss√≠vel gerar a consulta porque o campo n√£o existe no SCHEMA.\n\n\nüîÅ USO DE METADADOS DO SCHEMA\n\nO SCHEMA JSON cont√©m informa√ß√µes adicionais sobre cada tabela e coluna, incluindo:\n\nPol√≠ticas de deduplica√ß√£o (meta.deduplication)\n\nRefer√™ncias mensais (meta.month_reference)\n\nEstrutura de pivot (meta.pivot)\n\nFun√ß√µes de coluna (meta.role)\n\nSempre que esses metadados estiverem presentes:\n\nAplique automaticamente as regras de deduplica√ß√£o:\nselecione apenas a linha mais recente por combina√ß√£o de campos definidos em partition_by (geralmente CodigoMatriculaCliente + MesAnoRefer√™ncia),\nusando ROW_NUMBER() e Sequencia DESC, sem usar agrega√ß√µes num√©ricas.\n\nQuando o pedido envolver duas ou mais refer√™ncias de m√™s/ano,\nuse as defini√ß√µes de meta.pivot para gerar um PIVOT:\n\n√≠ndice: pivot.index\n\ncolunas: pivot.columns\n\nvalores: os campos solicitados que existam em pivot.value_fields\n\nformato: long_format se nenhum campo solicitado estiver na lista.\n\nNunca use SUM, AVG ou COUNT para eliminar duplicatas; respeite allow_numeric_aggregation=false.\n\nUse as express√µes de data definidas em month_reference.to_date_expr para comparar ou ordenar per√≠odos.\n\nSe o SCHEMA informar \"meta_class\": \"analytical_view\",\ninterprete essa tabela como vis√£o de an√°lise temporal, aplicando as regras acima automaticamente.\n\nMySQL 8 N√ÉO possui PIVOT: nunca use a palavra-chave PIVOT/UNPIVOT. Emule o pivot criando uma CTE por refer√™ncia com ROW_NUMBER() (rn=1) e fa√ßa JOIN entre as CTEs por CodigoMatriculaCliente (ou LEFT+RIGHT+UNION quando precisar).‚Äù\n\n‚ÄúQuando 2+ refer√™ncias forem detectadas: pro√≠be SUM/AVG/COUNT/MAX/MIN e GROUP BY para deduplicar; use apenas janela + JOIN.‚Äù\n\n\nüß≠ SA√çDA EM PIVOT (obrigat√≥ria para 2+ refer√™ncias)\n- Se o pedido envolver `vhist√≥ricodeleitura` e forem detectadas 2+ refer√™ncias mensais:\n  ‚Ä¢ Gere PIVOT com √≠ndice `CodigoMatriculaCliente`, colunas `MesAnoRefer√™ncia`\n  ‚Ä¢ Use como valores APENAS os campos solicitados que existam em `meta.pivot.value_fields`\n  ‚Ä¢ Sem agrega√ß√£o num√©rica; deduplique com ROW_NUMBER() por cliente/m√™s (Sequencia DESC)\n- Nome das colunas do PIVOT: <Campo>_<MM>_<YYYY> (ex.: ConsumoFaturado_06_2022).\n- ‚úÖ CHECK DE CONFORMIDADE (obrigat√≥rio ‚Äî n√£o imprimir):\n  1) Existem pelo menos duas colunas cujo nome termina em _MM_YYYY?\n  2) Cada coluna de valor solicitada est√° replicada por m√™s? (ex.: ConsumoFaturado_06_2022 e ConsumoFaturado_07_2022)\n  3) A consulta cont√©m a deduplica√ß√£o por Sequencia (janela ou subconsulta)?\n  4) N√£o h√° SUM/AVG/COUNT para remover duplicidade.\nSe qualquer item falhar, regenere a consulta at√© atender aos quatro itens.\n\n\n\n\nüßÆ COMPORTAMENTO GERAL\n\nGere apenas SELECTs leg√≠veis e v√°lidos.\n\nO foco √© montar a query-base corretamente (sem regras de refer√™ncia ou coorte).\n\nN√£o precisa aplicar as travas avan√ßadas do modo anterior.\n\nPode usar agrega√ß√µes (SUM, AVG, COUNT, etc.) e WHERE, GROUP BY, ORDER BY, LIMIT.\n\nüîÅ REGRAS ESPEC√çFICAS PARA vhist√≥ricodeleitura\n\nQuando a consulta mencionar ‚Äúan√°lise‚Äù, ‚Äúcomparar‚Äù, ‚Äúrefer√™ncia‚Äù, ‚Äúm√™s‚Äù ou ‚Äúper√≠odo‚Äù, e envolver a tabela vhist√≥ricodeleitura,\nn√£o retorne linhas duplicadas por cliente e m√™s.\n\nNesse caso, retorne apenas uma linha por (CodigoMatriculaCliente, MesAnoRefer√™ncia).\n\nNunca utilize fun√ß√µes de soma (SUM, COUNT, AVG, etc.) para eliminar duplicidades.\n\nUse o campo Sequencia como crit√©rio: selecione a linha de maior Sequencia (ou a √∫ltima dispon√≠vel) para cada combina√ß√£o de cliente e refer√™ncia.\n\nA query deve conter:\n\ncl√°usula PARTITION BY CodigoMatriculaCliente, MesAnoRefer√™ncia\n\ne ROW_NUMBER() OVER (...) ou subconsulta equivalente,\n\nsem agrega√ß√µes matem√°ticas.\n\nExemplo de comportamento esperado:\n\nPedido: ‚ÄúAnalise os consumos de 06 e 07/2022.‚Äù\nGera√ß√£o correta: uma linha por cliente/m√™s, usando WHERE MesAnoRefer√™ncia IN ('06/2022','07/2022') e l√≥gica de deduplica√ß√£o via Sequencia.\n\n\nüì§ SA√çDA\n\nRetorne apenas o SQL final, sem explica√ß√µes, sem coment√°rios, e sem ponto e v√≠rgula no fim.\n"}},"id":"5ca21724-0413-4238-994a-483cd8094f6f","name":"AI Agent","type":"@n8n/n8n-nodes-langchain.agent","position":[656,560],"typeVersion":1.6},{"parameters":{"operation":"fromJson","binaryPropertyName":"json","destinationKey":"json","options":{"encoding":"utf8"}},"id":"4848318a-83fd-4a16-a12a-a847c40a592c","name":"Extract data from file","type":"n8n-nodes-base.extractFromFile","position":[256,432],"typeVersion":1},{"parameters":{"model":"gpt-4.1-mini","options":{"maxTokens":1024,"temperature":0.2}},"id":"8ea36c80-835c-4b12-958c-3847c6bec114","name":"OpenAI Chat Model1","type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","position":[656,768],"typeVersion":1,"credentials":{"openAiApi":{"id":"H4HnbIJCN7JE8cR5","name":"OpenAi account"}}},{"parameters":{"contextWindowLength":10},"id":"b151d603-4fdc-44bd-8388-7dcf13283e01","name":"Window Buffer Memory1","type":"@n8n/n8n-nodes-langchain.memoryBufferWindow","position":[784,816],"typeVersion":1.2},{"parameters":{"assignments":{"assignments":[{"id":"b86f4807-aff3-42fb-a110-f43653368396","name":"Solicitacao","value":"={{ $json.query.Solicitacao }}","type":"string"},{"id":"66447438-499c-4ab3-88ee-e20835aa7618","name":"CodigoIManager","value":"={{ $json.query.CodigoIManager }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-432,432],"id":"9f4f2914-98bb-40dd-9096-ce1741eec86f","name":"Setar informa√ß√µes de Par√¢metros"},{"parameters":{"options":{}},"type":"n8n-nodes-base.respondToWebhook","typeVersion":1.4,"position":[2240,576],"id":"7cdececb-6e39-4de3-a374-1ade11f4ac34","name":"Respond to Webhook"},{"parameters":{"path":"DataMobilReader","responseMode":"responseNode","options":{"binaryPropertyName":"data","responseHeaders":{"entries":[{"name":"Solicitacao"},{"name":"CNPJ"},{"name":"CodigoManager"}]}}},"type":"n8n-nodes-base.webhook","typeVersion":2.1,"position":[-688,432],"id":"b1900029-98c1-40c0-8f5f-8c08eecb6ccc","name":"Entrada","webhookId":"33ea95da-c2e6-45be-84ec-dc15ede75b7d"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"f8f105fa-8e7c-4309-9cd9-9a5c987ed77f","leftValue":"={{ $json.allowed }}","rightValue":"","operator":{"type":"boolean","operation":"true","singleValue":true}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[1520,320],"id":"975a6a00-e823-4335-a96c-c7dba148d3eb","name":"If1"},{"parameters":{"jsCode":"// Run Once for All Items\n\nconst items = $input.all();\n\n// --- Utils ------------------------------------------------------------------\n\nfunction hasMeaningfulContent(o, depth = 0) {\n  if (o == null) return false;\n  if (typeof o !== 'object') return String(o).trim() !== '';\n  if (depth > 6) return true;\n  if (Array.isArray(o)) return o.some(v => hasMeaningfulContent(v, depth + 1));\n  const keys = Object.keys(o);\n  if (keys.length === 0) return false;\n  return keys.some(k => hasMeaningfulContent(o[k], depth + 1));\n}\n\nfunction collectErrorsDeep(obj, found = []) {\n  if (obj == null) return found;\n\n  const pushErr = (val) => {\n    if (val == null) return;\n    const msg = typeof val === 'object' ? JSON.stringify(val) : String(val);\n    if (msg.trim()) found.push(msg.trim());\n  };\n\n  if (Array.isArray(obj)) {\n    for (const v of obj) collectErrorsDeep(v, found);\n    return found;\n  }\n\n  if (typeof obj === 'object') {\n    for (const [k, v] of Object.entries(obj)) {\n      const lower = k.toLowerCase();\n      if (lower === 'erro' || lower === 'error') pushErr(v);\n      else if (lower === 'message' && typeof v === 'string') pushErr(v);\n      collectErrorsDeep(v, found);\n    }\n    return found;\n  }\n\n  return found;\n}\n\nfunction dedupStrings(arr) {\n  const seen = new Set();\n  const out = [];\n  for (const s of arr) if (!seen.has(s)) { seen.add(s); out.push(s); }\n  return out;\n}\n\n// Prefer√™ncia do Luis: $json.message.content.data\nfunction extractUsefulPayload(j) {\n  if (Array.isArray(j?.message?.content?.data)) return j.message.content.data.slice();\n  if (Array.isArray(j?.data)) return j.data.slice();\n  if (hasMeaningfulContent(j)) return [j];\n  return [];\n}\n\nfunction normalizeList(list) {\n  return list\n    .map(x => (x?.json ?? x))\n    .filter(o => hasMeaningfulContent(o))\n    .map(o => (typeof o === 'object' ? o : { value: o }));\n}\n\n// Captura a query de forma resiliente (suporta Set, Function e mesmo payload)\nfunction safeGetQuery() {\n  // 1) Se a query veio nos itens de entrada\n  for (const it of items) {\n    const j = it?.json ?? {};\n    const q = j.query ?? j.sql ?? j.consulta;\n    if (typeof q === 'string' && q.trim()) return q.trim();\n  }\n\n  // 2) Caso a query esteja em outro n√≥ do fluxo\n  try {\n    // Altere o nome abaixo para o n√≥ onde a SQL √© montada (ex: \"Extract SQL query\" ou \"Montar Query\")\n    const fromNode = $items('Extract SQL query', 0, 0);\n    for (const it of fromNode ?? []) {\n      const j = it?.json ?? {};\n      const q = j.query ?? j.sql ?? j.consulta;\n      if (typeof q === 'string' && q.trim()) return q.trim();\n    }\n  } catch (_) { /* ignora erros */ }\n\n  return null; // n√£o encontrada\n}\n\n// --- Fluxo ------------------------------------------------------------------\n\n// 1) Sem entradas\nif (!items || items.length === 0) {\n  return [{ json: { Erro: 'N√£o foram encontrados dados para esta solicita√ß√£o' } }];\n}\n\n// 2) Procure erros em todo o payload bruto\nlet erros = [];\nfor (const it of items) {\n  const j = it?.json ?? {};\n  collectErrorsDeep(j, erros);\n}\nerros = dedupStrings(erros);\n\n// 3) Se achou erro, retorna somente { Erro }\nif (erros.length > 0) {\n  return [{ json: { Erro: erros[0] } }];\n}\n\n// 4) Extrair dados dos formatos suportados\nlet all = [];\nfor (const it of items) {\n  const j = it?.json ?? {};\n  all.push(...extractUsefulPayload(j));\n}\n\n// 5) Fallback: cada item.json\nif (all.length === 0) {\n  all = items.map(i => i?.json ?? {});\n}\n\n// 6) Checar erros dentro da lista\nlet innerErrors = [];\ncollectErrorsDeep(all, innerErrors);\ninnerErrors = dedupStrings(innerErrors);\nif (innerErrors.length > 0) {\n  return [{ json: { Erro: innerErrors[0] } }];\n}\n\n// 7) Limpeza de dados\nconst rows = normalizeList(all);\n\n// 8) Captura a query (sem quebrar se n√£o existir)\nconst query = safeGetQuery();\n\n// 9) Sem dados ‚Üí erro padr√£o\nif (rows.length === 0) {\n  return [{ json: { Erro: 'N√£o foram encontrados dados para esta solicita√ß√£o' } }];\n}\n\n// 10) OK: retorna SEMPRE { data, query }\nreturn [{ json: { data: rows, query } }];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[2048,576],"id":"a0aec0db-756d-4afe-a91b-7dafd5dc5b7c","name":"Repassar dados"},{"parameters":{"jsCode":"// Entrada: { sql: \"SELECT ...\", userPrompt: \"...\" }  (ajuste nomes se preciso)\nlet sql = ($('Extract SQL query').first().json.query || \"\").trim();\n\n// 1) Remove coment√°rios (-- e /* */) e normaliza espa√ßos\nconst stripComments = s => {\n  // remove /* ... */ (multilinha)\n  s = s.replace(/\\/\\*[\\s\\S]*?\\*\\//g, ' ');\n  // remove -- at√© o fim da linha\n  s = s.replace(/--.*$/gm, ' ');\n  return s;\n};\nconst cleaned = stripComments(sql).replace(/\\s+/g, ' ').trim();\n\nconst forbidden = /\\b(SOMENTE|INSERT|UPDATE|DELETE|MERGE|CREATE|ALTER|DROP|TRUNCATE|GRANT|REVOKE|COMMENT|VACUUM|COPY|REFRESH|CALL|DO|BEGIN|COMMIT|ROLLBACK|SET|LOCK|CLUSTER|REINDEX|DISCARD)\\b/i;\nif (forbidden.test(cleaned)) {\n  return [{ \n    allowed: false, \n    reason: \"Cont√©m comando proibido.\", \n    erro: `Somente SELECT √© permitido. N√£o posso executar DDL/DML.\n    Detalhes: ` + $input.first().json.output\n  }];\n}\n\nreturn [{ allowed: true, sql }];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1328,320],"id":"ae73832a-f9ca-453e-887b-1d0053d57427","name":"Extrair query"},{"parameters":{"mode":"runOnceForEachItem","jsCode":"// Run Once for Each Item\n// devolve UM item por entrada (sem colchetes)\nconst msg = $json.output; \nreturn {\n  json: {\n      erro:msg ?? \"Por favor, forne√ßa a consulta ou pergunta espec√≠fica que deseja realizar com base no esquema fornecido.\"\n  }\n};\n\n\n\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1488,608],"id":"191bd965-7147-4388-9749-18351dc0ffb3","name":"Mensagem de query inv√°lida"},{"parameters":{"mode":"runOnceForEachItem","jsCode":"// Run Once for Each Item\n/**\n const msg = \"Solicita√ß√£o cont√©m comando proibido, somente SELECT √© permitido. N√£o posso executar DDL/DML.\";\n */\nconst msg = $json.erro;\nreturn {\n  json: { erro: msg }\n};\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1792,384],"id":"96507cf0-d1d9-4343-ae0a-1efa716ce116","name":"Mensagem de query Proibida"},{"parameters":{"mode":"runOnceForEachItem","jsCode":"const item = $input.item;\nconst j = item.json;\n\nconst configuracaoPorCliente = {\n  \"0001\": {\n    host: \"readerweb.crn36nipjstz.us-east-1.rds.amazonaws.com\",\n    database: \"readerweb_0926_teste\",\n    user: \"root\",\n    senha: \"iF9Z!BE4gy\",\n    porta: 3306,\n  },\n  \"3738\": {\n    host: \"readerweb.crn36nipjstz.us-east-1.rds.amazonaws.com\",\n    database: \"readerweb_0926_teste\",\n    user: \"root\",\n    senha: \"iF9Z!BE4gy\",\n    porta: 3306,\n  },\n  \"0962\": {\n    host: \"teste1.imanager.inovamobil.com.br\",\n    database: \"readerweb_0962\",\n    user: \"teste\",\n    senha: \"teste.1234@\",\n    porta: 3306,\n  },\n};\n\n// ==== OBRIGAT√ìRIO TER c√≥digo do IManager ====\nconst codigoIManager = (j.CodigoIManager ?? \"\");\nconst selected = configuracaoPorCliente[codigoIManager];\nif (!selected) {\n  throw new Error(\n    `Cliente ` + codigoIManager + ` n√£o informado, favor validar para utiliza√ß√£o do m√≥dulo.`\n  );\n}\n\nj.configuracao = {\n    host: selected.host,\n    database: selected.database,\n    user: selected.user,\n    password: selected.senha,\n    port: selected.porta,\n  };\n\nreturn item;\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-192,432],"id":"67ff62a7-54d1-447a-bbf2-9a3578a5cc9b","name":"Constantes"},{"parameters":{"operation":"executeQuery","query":"{{ $json.sql }}","options":{}},"id":"44319d40-4e25-4d5f-95ee-58649a11d7ae","name":"Executar query","type":"n8n-nodes-base.mySql","position":[1792,224],"typeVersion":2.4,"alwaysOutputData":true,"credentials":{"mySql":{"id":"w2ul7xQhpE4d1ssF","name":"MySQL account"}},"onError":"continueRegularOutput"}],"connections":{"Download file":{"main":[[{"node":"Extract data from file","type":"main","index":0}]]},"Check if query exists":{"main":[[{"node":"Extrair query","type":"main","index":0}],[{"node":"Mensagem de query inv√°lida","type":"main","index":0}]]},"Extract SQL query":{"main":[[{"node":"Check if query exists","type":"main","index":0}]]},"Combine schema data and chat input":{"main":[[{"node":"AI Agent","type":"main","index":0}]]},"AI Agent":{"main":[[{"node":"Extract SQL query","type":"main","index":0}]]},"Extract data from file":{"main":[[{"node":"Combine schema data and chat input","type":"main","index":0}]]},"OpenAI Chat Model1":{"ai_languageModel":[[{"node":"AI Agent","type":"ai_languageModel","index":0}]]},"Window Buffer Memory1":{"ai_memory":[[{"node":"AI Agent","type":"ai_memory","index":0}]]},"Setar informa√ß√µes de Par√¢metros":{"main":[[{"node":"Constantes","type":"main","index":0}]]},"Entrada":{"main":[[{"node":"Setar informa√ß√µes de Par√¢metros","type":"main","index":0}]]},"Respond to Webhook":{"main":[[]]},"If1":{"main":[[{"node":"Executar query","type":"main","index":0}],[{"node":"Mensagem de query Proibida","type":"main","index":0}]]},"Repassar dados":{"main":[[{"node":"Respond to Webhook","type":"main","index":0}]]},"Extrair query":{"main":[[{"node":"If1","type":"main","index":0}]]},"Mensagem de query inv√°lida":{"main":[[{"node":"Repassar dados","type":"main","index":0}]]},"Mensagem de query Proibida":{"main":[[{"node":"Repassar dados","type":"main","index":0}]]},"Constantes":{"main":[[{"node":"Download file","type":"main","index":0}]]},"Executar query":{"main":[[{"node":"Repassar dados","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"f10d59ca-3b51-445a-83d3-03361f9c04eb","triggerCount":1,"shared":[{"createdAt":"2025-10-20T12:45:06.069Z","updatedAt":"2025-10-20T12:45:06.069Z","role":"workflow:owner","workflowId":"X1RNJ1uC3Sw4fPtD","projectId":"bDUBly1zU3yziLIn"}],"tags":[]}